r(1..2499).

% Region Meanings
in(X, M) :- r(M), concept(X, T, N), N1=N+1, bit(M, T, N1).
out(X, M) :- r(M), concept(X, T, N), N1=N+1, not bit(M, T, N1).
in(X, M) :- r(M), concept2(X, _), not out(X, M).
irs(M) :- in(X, M), out(X, M), r(M), concept2(X, _).

% Region Constraints
irs(X) :- ir(X, _).
vrs(X) :- vr(X, _).
vr(X, X) :- not irs(X), r(X).
ir(X, X) :- not vrs(X), r(X).
:- vrs(X), irs(X).

concept2(A, B) :- concept(A,B,_).

% Taxonomy Description

%  Euler Bit
bit(M, 0, V) :- r(M), M1=M/1, V = M1 \ 50.

%  Euler Bit
bit(M, 1, V) :- r(M), M1=M/50, V = M1 \ 50.

concept2("CEN_USA", 0).
concept2("CEN_Northeast", 0).
concept("CEN_CT", 0, 0).
concept("CEN_MA", 0, 1).
concept("CEN_ME", 0, 2).
concept("CEN_NH", 0, 3).
concept("CEN_NJ", 0, 4).
concept("CEN_NY", 0, 5).
concept("CEN_PA", 0, 6).
concept("CEN_RI", 0, 7).
concept("CEN_VT", 0, 8).
concept2("CEN_Midwest", 0).
concept("CEN_IL", 0, 9).
concept("CEN_IN", 0, 10).
concept("CEN_IA", 0, 11).
concept("CEN_KS", 0, 12).
concept("CEN_MI", 0, 13).
concept("CEN_MN", 0, 14).
concept("CEN_MO", 0, 15).
concept("CEN_NE", 0, 16).
concept("CEN_ND", 0, 17).
concept("CEN_OH", 0, 18).
concept("CEN_SD", 0, 19).
concept("CEN_WI", 0, 20).
concept2("CEN_South", 0).
concept("CEN_AL", 0, 21).
concept("CEN_AR", 0, 22).
concept("CEN_DE", 0, 23).
concept("CEN_DC", 0, 24).
concept("CEN_FL", 0, 25).
concept("CEN_GA", 0, 26).
concept("CEN_KY", 0, 27).
concept("CEN_LA", 0, 28).
concept("CEN_MD", 0, 29).
concept("CEN_MS", 0, 30).
concept("CEN_NC", 0, 31).
concept("CEN_OK", 0, 32).
concept("CEN_SC", 0, 33).
concept("CEN_TN", 0, 34).
concept("CEN_TX", 0, 35).
concept("CEN_VA", 0, 36).
concept("CEN_WV", 0, 37).
concept2("CEN_West", 0).
concept("CEN_AZ", 0, 38).
concept("CEN_CA", 0, 39).
concept("CEN_CO", 0, 40).
concept("CEN_ID", 0, 41).
concept("CEN_MT", 0, 42).
concept("CEN_NV", 0, 43).
concept("CEN_NM", 0, 44).
concept("CEN_OR", 0, 45).
concept("CEN_UT", 0, 46).
concept("CEN_WA", 0, 47).
concept("CEN_WY", 0, 48).
concept2("NDC_USA", 1).
concept2("NDC_Midwest", 1).
concept("NDC_IA", 1, 0).
concept("NDC_IL", 1, 1).
concept("NDC_IN", 1, 2).
concept("NDC_KS", 1, 3).
concept("NDC_MI", 1, 4).
concept("NDC_MN", 1, 5).
concept("NDC_MO", 1, 6).
concept("NDC_ND", 1, 7).
concept("NDC_NE", 1, 8).
concept("NDC_OH", 1, 9).
concept("NDC_SD", 1, 10).
concept("NDC_WI", 1, 11).
concept2("NDC_Northeast", 1).
concept("NDC_CT", 1, 12).
concept("NDC_DC", 1, 13).
concept("NDC_DE", 1, 14).
concept("NDC_MD", 1, 15).
concept("NDC_MA", 1, 16).
concept("NDC_ME", 1, 17).
concept("NDC_NH", 1, 18).
concept("NDC_NJ", 1, 19).
concept("NDC_NY", 1, 20).
concept("NDC_PA", 1, 21).
concept("NDC_RI", 1, 22).
concept("NDC_VT", 1, 23).
concept2("NDC_Southeast", 1).
concept("NDC_AL", 1, 24).
concept("NDC_AR", 1, 25).
concept("NDC_FL", 1, 26).
concept("NDC_GA", 1, 27).
concept("NDC_KY", 1, 28).
concept("NDC_LA", 1, 29).
concept("NDC_MS", 1, 30).
concept("NDC_NC", 1, 31).
concept("NDC_SC", 1, 32).
concept("NDC_TN", 1, 33).
concept("NDC_VA", 1, 34).
concept("NDC_WV", 1, 35).
concept2("NDC_Southwest", 1).
concept("NDC_AZ", 1, 36).
concept("NDC_NM", 1, 37).
concept("NDC_OK", 1, 38).
concept("NDC_TX", 1, 39).
concept2("NDC_West", 1).
concept("NDC_CA", 1, 40).
concept("NDC_CO", 1, 41).
concept("NDC_ID", 1, 42).
concept("NDC_MT", 1, 43).
concept("NDC_NV", 1, 44).
concept("NDC_OR", 1, 45).
concept("NDC_WA", 1, 46).
concept("NDC_WY", 1, 47).
concept("NDC_UT", 1, 48).

% "CEN_Northeast" isa "CEN_USA"
ir(X, r6) :- in("CEN_Northeast", X), out("CEN_USA", X).
:- #count {X : vrs(X), in("CEN_Northeast", X), in("CEN_USA", X)} = 0.

% "CEN_Midwest" isa "CEN_USA"
ir(X, r7) :- in("CEN_Midwest", X), out("CEN_USA", X).
:- #count {X : vrs(X), in("CEN_Midwest", X), in("CEN_USA", X)} = 0.

% "CEN_South" isa "CEN_USA"
ir(X, r8) :- in("CEN_South", X), out("CEN_USA", X).
:- #count {X : vrs(X), in("CEN_South", X), in("CEN_USA", X)} = 0.

% "CEN_West" isa "CEN_USA"
ir(X, r9) :- in("CEN_West", X), out("CEN_USA", X).
:- #count {X : vrs(X), in("CEN_West", X), in("CEN_USA", X)} = 0.

% "CEN_CT" isa "CEN_Northeast"
ir(X, r46) :- in("CEN_CT", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_CT", X), in("CEN_Northeast", X)} = 0.

% "CEN_MA" isa "CEN_Northeast"
ir(X, r47) :- in("CEN_MA", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_MA", X), in("CEN_Northeast", X)} = 0.

% "CEN_ME" isa "CEN_Northeast"
ir(X, r48) :- in("CEN_ME", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_ME", X), in("CEN_Northeast", X)} = 0.

% "CEN_NH" isa "CEN_Northeast"
ir(X, r49) :- in("CEN_NH", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_NH", X), in("CEN_Northeast", X)} = 0.

% "CEN_NJ" isa "CEN_Northeast"
ir(X, r50) :- in("CEN_NJ", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_NJ", X), in("CEN_Northeast", X)} = 0.

% "CEN_NY" isa "CEN_Northeast"
ir(X, r51) :- in("CEN_NY", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_NY", X), in("CEN_Northeast", X)} = 0.

% "CEN_PA" isa "CEN_Northeast"
ir(X, r52) :- in("CEN_PA", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_PA", X), in("CEN_Northeast", X)} = 0.

% "CEN_RI" isa "CEN_Northeast"
ir(X, r53) :- in("CEN_RI", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_RI", X), in("CEN_Northeast", X)} = 0.

% "CEN_VT" isa "CEN_Northeast"
ir(X, r54) :- in("CEN_VT", X), out("CEN_Northeast", X).
:- #count {X : vrs(X), in("CEN_VT", X), in("CEN_Northeast", X)} = 0.

% "CEN_IL" isa "CEN_Midwest"
ir(X, r121) :- in("CEN_IL", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_IL", X), in("CEN_Midwest", X)} = 0.

% "CEN_IN" isa "CEN_Midwest"
ir(X, r122) :- in("CEN_IN", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_IN", X), in("CEN_Midwest", X)} = 0.

% "CEN_IA" isa "CEN_Midwest"
ir(X, r123) :- in("CEN_IA", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_IA", X), in("CEN_Midwest", X)} = 0.

% "CEN_KS" isa "CEN_Midwest"
ir(X, r124) :- in("CEN_KS", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_KS", X), in("CEN_Midwest", X)} = 0.

% "CEN_MI" isa "CEN_Midwest"
ir(X, r125) :- in("CEN_MI", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_MI", X), in("CEN_Midwest", X)} = 0.

% "CEN_MN" isa "CEN_Midwest"
ir(X, r126) :- in("CEN_MN", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_MN", X), in("CEN_Midwest", X)} = 0.

% "CEN_MO" isa "CEN_Midwest"
ir(X, r127) :- in("CEN_MO", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_MO", X), in("CEN_Midwest", X)} = 0.

% "CEN_NE" isa "CEN_Midwest"
ir(X, r128) :- in("CEN_NE", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_NE", X), in("CEN_Midwest", X)} = 0.

% "CEN_ND" isa "CEN_Midwest"
ir(X, r129) :- in("CEN_ND", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_ND", X), in("CEN_Midwest", X)} = 0.

% "CEN_OH" isa "CEN_Midwest"
ir(X, r130) :- in("CEN_OH", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_OH", X), in("CEN_Midwest", X)} = 0.

% "CEN_SD" isa "CEN_Midwest"
ir(X, r131) :- in("CEN_SD", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_SD", X), in("CEN_Midwest", X)} = 0.

% "CEN_WI" isa "CEN_Midwest"
ir(X, r132) :- in("CEN_WI", X), out("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_WI", X), in("CEN_Midwest", X)} = 0.

% "CEN_AL" isa "CEN_South"
ir(X, r269) :- in("CEN_AL", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_AL", X), in("CEN_South", X)} = 0.

% "CEN_AR" isa "CEN_South"
ir(X, r270) :- in("CEN_AR", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_AR", X), in("CEN_South", X)} = 0.

% "CEN_DE" isa "CEN_South"
ir(X, r271) :- in("CEN_DE", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_DE", X), in("CEN_South", X)} = 0.

% "CEN_DC" isa "CEN_South"
ir(X, r272) :- in("CEN_DC", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_DC", X), in("CEN_South", X)} = 0.

% "CEN_FL" isa "CEN_South"
ir(X, r273) :- in("CEN_FL", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_FL", X), in("CEN_South", X)} = 0.

% "CEN_GA" isa "CEN_South"
ir(X, r274) :- in("CEN_GA", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_GA", X), in("CEN_South", X)} = 0.

% "CEN_KY" isa "CEN_South"
ir(X, r275) :- in("CEN_KY", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_KY", X), in("CEN_South", X)} = 0.

% "CEN_LA" isa "CEN_South"
ir(X, r276) :- in("CEN_LA", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_LA", X), in("CEN_South", X)} = 0.

% "CEN_MD" isa "CEN_South"
ir(X, r277) :- in("CEN_MD", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_MD", X), in("CEN_South", X)} = 0.

% "CEN_MS" isa "CEN_South"
ir(X, r278) :- in("CEN_MS", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_MS", X), in("CEN_South", X)} = 0.

% "CEN_NC" isa "CEN_South"
ir(X, r279) :- in("CEN_NC", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_NC", X), in("CEN_South", X)} = 0.

% "CEN_OK" isa "CEN_South"
ir(X, r280) :- in("CEN_OK", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_OK", X), in("CEN_South", X)} = 0.

% "CEN_SC" isa "CEN_South"
ir(X, r281) :- in("CEN_SC", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_SC", X), in("CEN_South", X)} = 0.

% "CEN_TN" isa "CEN_South"
ir(X, r282) :- in("CEN_TN", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_TN", X), in("CEN_South", X)} = 0.

% "CEN_TX" isa "CEN_South"
ir(X, r283) :- in("CEN_TX", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_TX", X), in("CEN_South", X)} = 0.

% "CEN_VA" isa "CEN_South"
ir(X, r284) :- in("CEN_VA", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_VA", X), in("CEN_South", X)} = 0.

% "CEN_WV" isa "CEN_South"
ir(X, r285) :- in("CEN_WV", X), out("CEN_South", X).
:- #count {X : vrs(X), in("CEN_WV", X), in("CEN_South", X)} = 0.

% "CEN_AZ" isa "CEN_West"
ir(X, r341) :- in("CEN_AZ", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_AZ", X), in("CEN_West", X)} = 0.

% "CEN_CA" isa "CEN_West"
ir(X, r342) :- in("CEN_CA", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_CA", X), in("CEN_West", X)} = 0.

% "CEN_CO" isa "CEN_West"
ir(X, r343) :- in("CEN_CO", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_CO", X), in("CEN_West", X)} = 0.

% "CEN_ID" isa "CEN_West"
ir(X, r344) :- in("CEN_ID", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_ID", X), in("CEN_West", X)} = 0.

% "CEN_MT" isa "CEN_West"
ir(X, r345) :- in("CEN_MT", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_MT", X), in("CEN_West", X)} = 0.

% "CEN_NV" isa "CEN_West"
ir(X, r346) :- in("CEN_NV", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_NV", X), in("CEN_West", X)} = 0.

% "CEN_NM" isa "CEN_West"
ir(X, r347) :- in("CEN_NM", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_NM", X), in("CEN_West", X)} = 0.

% "CEN_OR" isa "CEN_West"
ir(X, r348) :- in("CEN_OR", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_OR", X), in("CEN_West", X)} = 0.

% "CEN_UT" isa "CEN_West"
ir(X, r349) :- in("CEN_UT", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_UT", X), in("CEN_West", X)} = 0.

% "CEN_WA" isa "CEN_West"
ir(X, r350) :- in("CEN_WA", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_WA", X), in("CEN_West", X)} = 0.

% "CEN_WY" isa "CEN_West"
ir(X, r351) :- in("CEN_WY", X), out("CEN_West", X).
:- #count {X : vrs(X), in("CEN_WY", X), in("CEN_West", X)} = 0.

% "NDC_Midwest" isa "NDC_USA"
ir(X, r362) :- in("NDC_Midwest", X), out("NDC_USA", X).
:- #count {X : vrs(X), in("NDC_Midwest", X), in("NDC_USA", X)} = 0.

% "NDC_Northeast" isa "NDC_USA"
ir(X, r363) :- in("NDC_Northeast", X), out("NDC_USA", X).
:- #count {X : vrs(X), in("NDC_Northeast", X), in("NDC_USA", X)} = 0.

% "NDC_Southeast" isa "NDC_USA"
ir(X, r364) :- in("NDC_Southeast", X), out("NDC_USA", X).
:- #count {X : vrs(X), in("NDC_Southeast", X), in("NDC_USA", X)} = 0.

% "NDC_Southwest" isa "NDC_USA"
ir(X, r365) :- in("NDC_Southwest", X), out("NDC_USA", X).
:- #count {X : vrs(X), in("NDC_Southwest", X), in("NDC_USA", X)} = 0.

% "NDC_West" isa "NDC_USA"
ir(X, r366) :- in("NDC_West", X), out("NDC_USA", X).
:- #count {X : vrs(X), in("NDC_West", X), in("NDC_USA", X)} = 0.

% "NDC_IA" isa "NDC_Midwest"
ir(X, r433) :- in("NDC_IA", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_IA", X), in("NDC_Midwest", X)} = 0.

% "NDC_IL" isa "NDC_Midwest"
ir(X, r434) :- in("NDC_IL", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_IL", X), in("NDC_Midwest", X)} = 0.

% "NDC_IN" isa "NDC_Midwest"
ir(X, r435) :- in("NDC_IN", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_IN", X), in("NDC_Midwest", X)} = 0.

% "NDC_KS" isa "NDC_Midwest"
ir(X, r436) :- in("NDC_KS", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_KS", X), in("NDC_Midwest", X)} = 0.

% "NDC_MI" isa "NDC_Midwest"
ir(X, r437) :- in("NDC_MI", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_MI", X), in("NDC_Midwest", X)} = 0.

% "NDC_MN" isa "NDC_Midwest"
ir(X, r438) :- in("NDC_MN", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_MN", X), in("NDC_Midwest", X)} = 0.

% "NDC_MO" isa "NDC_Midwest"
ir(X, r439) :- in("NDC_MO", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_MO", X), in("NDC_Midwest", X)} = 0.

% "NDC_ND" isa "NDC_Midwest"
ir(X, r440) :- in("NDC_ND", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_ND", X), in("NDC_Midwest", X)} = 0.

% "NDC_NE" isa "NDC_Midwest"
ir(X, r441) :- in("NDC_NE", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_NE", X), in("NDC_Midwest", X)} = 0.

% "NDC_OH" isa "NDC_Midwest"
ir(X, r442) :- in("NDC_OH", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_OH", X), in("NDC_Midwest", X)} = 0.

% "NDC_SD" isa "NDC_Midwest"
ir(X, r443) :- in("NDC_SD", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_SD", X), in("NDC_Midwest", X)} = 0.

% "NDC_WI" isa "NDC_Midwest"
ir(X, r444) :- in("NDC_WI", X), out("NDC_Midwest", X).
:- #count {X : vrs(X), in("NDC_WI", X), in("NDC_Midwest", X)} = 0.

% "NDC_CT" isa "NDC_Northeast"
ir(X, r511) :- in("NDC_CT", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_CT", X), in("NDC_Northeast", X)} = 0.

% "NDC_DC" isa "NDC_Northeast"
ir(X, r512) :- in("NDC_DC", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_DC", X), in("NDC_Northeast", X)} = 0.

% "NDC_DE" isa "NDC_Northeast"
ir(X, r513) :- in("NDC_DE", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_DE", X), in("NDC_Northeast", X)} = 0.

% "NDC_MD" isa "NDC_Northeast"
ir(X, r514) :- in("NDC_MD", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_MD", X), in("NDC_Northeast", X)} = 0.

% "NDC_MA" isa "NDC_Northeast"
ir(X, r515) :- in("NDC_MA", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_MA", X), in("NDC_Northeast", X)} = 0.

% "NDC_ME" isa "NDC_Northeast"
ir(X, r516) :- in("NDC_ME", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_ME", X), in("NDC_Northeast", X)} = 0.

% "NDC_NH" isa "NDC_Northeast"
ir(X, r517) :- in("NDC_NH", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_NH", X), in("NDC_Northeast", X)} = 0.

% "NDC_NJ" isa "NDC_Northeast"
ir(X, r518) :- in("NDC_NJ", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_NJ", X), in("NDC_Northeast", X)} = 0.

% "NDC_NY" isa "NDC_Northeast"
ir(X, r519) :- in("NDC_NY", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_NY", X), in("NDC_Northeast", X)} = 0.

% "NDC_PA" isa "NDC_Northeast"
ir(X, r520) :- in("NDC_PA", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_PA", X), in("NDC_Northeast", X)} = 0.

% "NDC_RI" isa "NDC_Northeast"
ir(X, r521) :- in("NDC_RI", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_RI", X), in("NDC_Northeast", X)} = 0.

% "NDC_VT" isa "NDC_Northeast"
ir(X, r522) :- in("NDC_VT", X), out("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_VT", X), in("NDC_Northeast", X)} = 0.

% "NDC_AL" isa "NDC_Southeast"
ir(X, r589) :- in("NDC_AL", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_AL", X), in("NDC_Southeast", X)} = 0.

% "NDC_AR" isa "NDC_Southeast"
ir(X, r590) :- in("NDC_AR", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_AR", X), in("NDC_Southeast", X)} = 0.

% "NDC_FL" isa "NDC_Southeast"
ir(X, r591) :- in("NDC_FL", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_FL", X), in("NDC_Southeast", X)} = 0.

% "NDC_GA" isa "NDC_Southeast"
ir(X, r592) :- in("NDC_GA", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_GA", X), in("NDC_Southeast", X)} = 0.

% "NDC_KY" isa "NDC_Southeast"
ir(X, r593) :- in("NDC_KY", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_KY", X), in("NDC_Southeast", X)} = 0.

% "NDC_LA" isa "NDC_Southeast"
ir(X, r594) :- in("NDC_LA", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_LA", X), in("NDC_Southeast", X)} = 0.

% "NDC_MS" isa "NDC_Southeast"
ir(X, r595) :- in("NDC_MS", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_MS", X), in("NDC_Southeast", X)} = 0.

% "NDC_NC" isa "NDC_Southeast"
ir(X, r596) :- in("NDC_NC", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_NC", X), in("NDC_Southeast", X)} = 0.

% "NDC_SC" isa "NDC_Southeast"
ir(X, r597) :- in("NDC_SC", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_SC", X), in("NDC_Southeast", X)} = 0.

% "NDC_TN" isa "NDC_Southeast"
ir(X, r598) :- in("NDC_TN", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_TN", X), in("NDC_Southeast", X)} = 0.

% "NDC_VA" isa "NDC_Southeast"
ir(X, r599) :- in("NDC_VA", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_VA", X), in("NDC_Southeast", X)} = 0.

% "NDC_WV" isa "NDC_Southeast"
ir(X, r600) :- in("NDC_WV", X), out("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_WV", X), in("NDC_Southeast", X)} = 0.

% "NDC_AZ" isa "NDC_Southwest"
ir(X, r607) :- in("NDC_AZ", X), out("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_AZ", X), in("NDC_Southwest", X)} = 0.

% "NDC_NM" isa "NDC_Southwest"
ir(X, r608) :- in("NDC_NM", X), out("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_NM", X), in("NDC_Southwest", X)} = 0.

% "NDC_OK" isa "NDC_Southwest"
ir(X, r609) :- in("NDC_OK", X), out("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_OK", X), in("NDC_Southwest", X)} = 0.

% "NDC_TX" isa "NDC_Southwest"
ir(X, r610) :- in("NDC_TX", X), out("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_TX", X), in("NDC_Southwest", X)} = 0.

% "NDC_CA" isa "NDC_West"
ir(X, r647) :- in("NDC_CA", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_CA", X), in("NDC_West", X)} = 0.

% "NDC_CO" isa "NDC_West"
ir(X, r648) :- in("NDC_CO", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_CO", X), in("NDC_West", X)} = 0.

% "NDC_ID" isa "NDC_West"
ir(X, r649) :- in("NDC_ID", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_ID", X), in("NDC_West", X)} = 0.

% "NDC_MT" isa "NDC_West"
ir(X, r650) :- in("NDC_MT", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_MT", X), in("NDC_West", X)} = 0.

% "NDC_NV" isa "NDC_West"
ir(X, r651) :- in("NDC_NV", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_NV", X), in("NDC_West", X)} = 0.

% "NDC_OR" isa "NDC_West"
ir(X, r652) :- in("NDC_OR", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_OR", X), in("NDC_West", X)} = 0.

% "NDC_WA" isa "NDC_West"
ir(X, r653) :- in("NDC_WA", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_WA", X), in("NDC_West", X)} = 0.

% "NDC_WY" isa "NDC_West"
ir(X, r654) :- in("NDC_WY", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_WY", X), in("NDC_West", X)} = 0.

% "NDC_UT" isa "NDC_West"
ir(X, r655) :- in("NDC_UT", X), out("NDC_West", X).
:- #count {X : vrs(X), in("NDC_UT", X), in("NDC_West", X)} = 0.

% Coverage for "CEN_USA"
out("CEN_USA", X) :- out("CEN_Northeast", X), out("CEN_Midwest", X), out("CEN_South", X), out("CEN_West", X).

% Coverage for "CEN_Northeast"
out("CEN_Northeast", X) :- out("CEN_CT", X), out("CEN_MA", X), out("CEN_ME", X), out("CEN_NH", X), out("CEN_NJ", X), out("CEN_NY", X), out("CEN_PA", X), out("CEN_RI", X), out("CEN_VT", X).

% Coverage for "CEN_Midwest"
out("CEN_Midwest", X) :- out("CEN_IL", X), out("CEN_IN", X), out("CEN_IA", X), out("CEN_KS", X), out("CEN_MI", X), out("CEN_MN", X), out("CEN_MO", X), out("CEN_NE", X), out("CEN_ND", X), out("CEN_OH", X), out("CEN_SD", X), out("CEN_WI", X).

% Coverage for "CEN_South"
out("CEN_South", X) :- out("CEN_AL", X), out("CEN_AR", X), out("CEN_DE", X), out("CEN_DC", X), out("CEN_FL", X), out("CEN_GA", X), out("CEN_KY", X), out("CEN_LA", X), out("CEN_MD", X), out("CEN_MS", X), out("CEN_NC", X), out("CEN_OK", X), out("CEN_SC", X), out("CEN_TN", X), out("CEN_TX", X), out("CEN_VA", X), out("CEN_WV", X).

% Coverage for "CEN_West"
out("CEN_West", X) :- out("CEN_AZ", X), out("CEN_CA", X), out("CEN_CO", X), out("CEN_ID", X), out("CEN_MT", X), out("CEN_NV", X), out("CEN_NM", X), out("CEN_OR", X), out("CEN_UT", X), out("CEN_WA", X), out("CEN_WY", X).

% Coverage for "NDC_USA"
out("NDC_USA", X) :- out("NDC_Midwest", X), out("NDC_Northeast", X), out("NDC_Southeast", X), out("NDC_Southwest", X), out("NDC_West", X).

% Coverage for "NDC_Midwest"
out("NDC_Midwest", X) :- out("NDC_IA", X), out("NDC_IL", X), out("NDC_IN", X), out("NDC_KS", X), out("NDC_MI", X), out("NDC_MN", X), out("NDC_MO", X), out("NDC_ND", X), out("NDC_NE", X), out("NDC_OH", X), out("NDC_SD", X), out("NDC_WI", X).

% Coverage for "NDC_Northeast"
out("NDC_Northeast", X) :- out("NDC_CT", X), out("NDC_DC", X), out("NDC_DE", X), out("NDC_MD", X), out("NDC_MA", X), out("NDC_ME", X), out("NDC_NH", X), out("NDC_NJ", X), out("NDC_NY", X), out("NDC_PA", X), out("NDC_RI", X), out("NDC_VT", X).

% Coverage for "NDC_Southeast"
out("NDC_Southeast", X) :- out("NDC_AL", X), out("NDC_AR", X), out("NDC_FL", X), out("NDC_GA", X), out("NDC_KY", X), out("NDC_LA", X), out("NDC_MS", X), out("NDC_NC", X), out("NDC_SC", X), out("NDC_TN", X), out("NDC_VA", X), out("NDC_WV", X).

% Coverage for "NDC_Southwest"
out("NDC_Southwest", X) :- out("NDC_AZ", X), out("NDC_NM", X), out("NDC_OK", X), out("NDC_TX", X).

% Coverage for "NDC_West"
out("NDC_West", X) :- out("NDC_CA", X), out("NDC_CO", X), out("NDC_ID", X), out("NDC_MT", X), out("NDC_NV", X), out("NDC_OR", X), out("NDC_WA", X), out("NDC_WY", X), out("NDC_UT", X).

% "CEN_Northeast" ! "CEN_Midwest"
ir(X, r0) :- in("CEN_Northeast", X), in("CEN_Midwest", X).
:- #count {X : vrs(X), in("CEN_Northeast", X), out("CEN_Midwest", X)} = 0.
:- #count {X : vrs(X), in("CEN_Midwest", X), out("CEN_Northeast", X)} = 0.

% "CEN_Northeast" ! "CEN_South"
ir(X, r1) :- in("CEN_Northeast", X), in("CEN_South", X).
:- #count {X : vrs(X), in("CEN_Northeast", X), out("CEN_South", X)} = 0.
:- #count {X : vrs(X), in("CEN_South", X), out("CEN_Northeast", X)} = 0.

% "CEN_Northeast" ! "CEN_West"
ir(X, r2) :- in("CEN_Northeast", X), in("CEN_West", X).
:- #count {X : vrs(X), in("CEN_Northeast", X), out("CEN_West", X)} = 0.
:- #count {X : vrs(X), in("CEN_West", X), out("CEN_Northeast", X)} = 0.

% "CEN_Midwest" ! "CEN_South"
ir(X, r3) :- in("CEN_Midwest", X), in("CEN_South", X).
:- #count {X : vrs(X), in("CEN_Midwest", X), out("CEN_South", X)} = 0.
:- #count {X : vrs(X), in("CEN_South", X), out("CEN_Midwest", X)} = 0.

% "CEN_Midwest" ! "CEN_West"
ir(X, r4) :- in("CEN_Midwest", X), in("CEN_West", X).
:- #count {X : vrs(X), in("CEN_Midwest", X), out("CEN_West", X)} = 0.
:- #count {X : vrs(X), in("CEN_West", X), out("CEN_Midwest", X)} = 0.

% "CEN_South" ! "CEN_West"
ir(X, r5) :- in("CEN_South", X), in("CEN_West", X).
:- #count {X : vrs(X), in("CEN_South", X), out("CEN_West", X)} = 0.
:- #count {X : vrs(X), in("CEN_West", X), out("CEN_South", X)} = 0.

% "CEN_CT" ! "CEN_MA"
ir(X, r10) :- in("CEN_CT", X), in("CEN_MA", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_MA", X)} = 0.
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_ME"
ir(X, r11) :- in("CEN_CT", X), in("CEN_ME", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_ME", X)} = 0.
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_NH"
ir(X, r12) :- in("CEN_CT", X), in("CEN_NH", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_NH", X)} = 0.
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_NJ"
ir(X, r13) :- in("CEN_CT", X), in("CEN_NJ", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_NJ", X)} = 0.
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_NY"
ir(X, r14) :- in("CEN_CT", X), in("CEN_NY", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_NY", X)} = 0.
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_PA"
ir(X, r15) :- in("CEN_CT", X), in("CEN_PA", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_PA", X)} = 0.
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_RI"
ir(X, r16) :- in("CEN_CT", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_CT", X)} = 0.

% "CEN_CT" ! "CEN_VT"
ir(X, r17) :- in("CEN_CT", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_CT", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_CT", X)} = 0.

% "CEN_MA" ! "CEN_ME"
ir(X, r18) :- in("CEN_MA", X), in("CEN_ME", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_ME", X)} = 0.
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_MA", X)} = 0.

% "CEN_MA" ! "CEN_NH"
ir(X, r19) :- in("CEN_MA", X), in("CEN_NH", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_NH", X)} = 0.
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_MA", X)} = 0.

% "CEN_MA" ! "CEN_NJ"
ir(X, r20) :- in("CEN_MA", X), in("CEN_NJ", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_NJ", X)} = 0.
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_MA", X)} = 0.

% "CEN_MA" ! "CEN_NY"
ir(X, r21) :- in("CEN_MA", X), in("CEN_NY", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_NY", X)} = 0.
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_MA", X)} = 0.

% "CEN_MA" ! "CEN_PA"
ir(X, r22) :- in("CEN_MA", X), in("CEN_PA", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_PA", X)} = 0.
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_MA", X)} = 0.

% "CEN_MA" ! "CEN_RI"
ir(X, r23) :- in("CEN_MA", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_MA", X)} = 0.

% "CEN_MA" ! "CEN_VT"
ir(X, r24) :- in("CEN_MA", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_MA", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_MA", X)} = 0.

% "CEN_ME" ! "CEN_NH"
ir(X, r25) :- in("CEN_ME", X), in("CEN_NH", X).
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_NH", X)} = 0.
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_ME", X)} = 0.

% "CEN_ME" ! "CEN_NJ"
ir(X, r26) :- in("CEN_ME", X), in("CEN_NJ", X).
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_NJ", X)} = 0.
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_ME", X)} = 0.

% "CEN_ME" ! "CEN_NY"
ir(X, r27) :- in("CEN_ME", X), in("CEN_NY", X).
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_NY", X)} = 0.
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_ME", X)} = 0.

% "CEN_ME" ! "CEN_PA"
ir(X, r28) :- in("CEN_ME", X), in("CEN_PA", X).
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_PA", X)} = 0.
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_ME", X)} = 0.

% "CEN_ME" ! "CEN_RI"
ir(X, r29) :- in("CEN_ME", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_ME", X)} = 0.

% "CEN_ME" ! "CEN_VT"
ir(X, r30) :- in("CEN_ME", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_ME", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_ME", X)} = 0.

% "CEN_NH" ! "CEN_NJ"
ir(X, r31) :- in("CEN_NH", X), in("CEN_NJ", X).
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_NJ", X)} = 0.
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_NH", X)} = 0.

% "CEN_NH" ! "CEN_NY"
ir(X, r32) :- in("CEN_NH", X), in("CEN_NY", X).
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_NY", X)} = 0.
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_NH", X)} = 0.

% "CEN_NH" ! "CEN_PA"
ir(X, r33) :- in("CEN_NH", X), in("CEN_PA", X).
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_PA", X)} = 0.
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_NH", X)} = 0.

% "CEN_NH" ! "CEN_RI"
ir(X, r34) :- in("CEN_NH", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_NH", X)} = 0.

% "CEN_NH" ! "CEN_VT"
ir(X, r35) :- in("CEN_NH", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_NH", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_NH", X)} = 0.

% "CEN_NJ" ! "CEN_NY"
ir(X, r36) :- in("CEN_NJ", X), in("CEN_NY", X).
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_NY", X)} = 0.
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_NJ", X)} = 0.

% "CEN_NJ" ! "CEN_PA"
ir(X, r37) :- in("CEN_NJ", X), in("CEN_PA", X).
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_PA", X)} = 0.
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_NJ", X)} = 0.

% "CEN_NJ" ! "CEN_RI"
ir(X, r38) :- in("CEN_NJ", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_NJ", X)} = 0.

% "CEN_NJ" ! "CEN_VT"
ir(X, r39) :- in("CEN_NJ", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_NJ", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_NJ", X)} = 0.

% "CEN_NY" ! "CEN_PA"
ir(X, r40) :- in("CEN_NY", X), in("CEN_PA", X).
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_PA", X)} = 0.
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_NY", X)} = 0.

% "CEN_NY" ! "CEN_RI"
ir(X, r41) :- in("CEN_NY", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_NY", X)} = 0.

% "CEN_NY" ! "CEN_VT"
ir(X, r42) :- in("CEN_NY", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_NY", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_NY", X)} = 0.

% "CEN_PA" ! "CEN_RI"
ir(X, r43) :- in("CEN_PA", X), in("CEN_RI", X).
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_RI", X)} = 0.
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_PA", X)} = 0.

% "CEN_PA" ! "CEN_VT"
ir(X, r44) :- in("CEN_PA", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_PA", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_PA", X)} = 0.

% "CEN_RI" ! "CEN_VT"
ir(X, r45) :- in("CEN_RI", X), in("CEN_VT", X).
:- #count {X : vrs(X), in("CEN_RI", X), out("CEN_VT", X)} = 0.
:- #count {X : vrs(X), in("CEN_VT", X), out("CEN_RI", X)} = 0.

% "CEN_IL" ! "CEN_IN"
ir(X, r55) :- in("CEN_IL", X), in("CEN_IN", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_IN", X)} = 0.
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_IA"
ir(X, r56) :- in("CEN_IL", X), in("CEN_IA", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_IA", X)} = 0.
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_KS"
ir(X, r57) :- in("CEN_IL", X), in("CEN_KS", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_KS", X)} = 0.
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_MI"
ir(X, r58) :- in("CEN_IL", X), in("CEN_MI", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_MI", X)} = 0.
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_MN"
ir(X, r59) :- in("CEN_IL", X), in("CEN_MN", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_MN", X)} = 0.
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_MO"
ir(X, r60) :- in("CEN_IL", X), in("CEN_MO", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_MO", X)} = 0.
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_NE"
ir(X, r61) :- in("CEN_IL", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_ND"
ir(X, r62) :- in("CEN_IL", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_OH"
ir(X, r63) :- in("CEN_IL", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_SD"
ir(X, r64) :- in("CEN_IL", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_IL", X)} = 0.

% "CEN_IL" ! "CEN_WI"
ir(X, r65) :- in("CEN_IL", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_IL", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_IL", X)} = 0.

% "CEN_IN" ! "CEN_IA"
ir(X, r66) :- in("CEN_IN", X), in("CEN_IA", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_IA", X)} = 0.
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_KS"
ir(X, r67) :- in("CEN_IN", X), in("CEN_KS", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_KS", X)} = 0.
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_MI"
ir(X, r68) :- in("CEN_IN", X), in("CEN_MI", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_MI", X)} = 0.
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_MN"
ir(X, r69) :- in("CEN_IN", X), in("CEN_MN", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_MN", X)} = 0.
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_MO"
ir(X, r70) :- in("CEN_IN", X), in("CEN_MO", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_MO", X)} = 0.
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_NE"
ir(X, r71) :- in("CEN_IN", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_ND"
ir(X, r72) :- in("CEN_IN", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_OH"
ir(X, r73) :- in("CEN_IN", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_SD"
ir(X, r74) :- in("CEN_IN", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_IN", X)} = 0.

% "CEN_IN" ! "CEN_WI"
ir(X, r75) :- in("CEN_IN", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_IN", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_IN", X)} = 0.

% "CEN_IA" ! "CEN_KS"
ir(X, r76) :- in("CEN_IA", X), in("CEN_KS", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_KS", X)} = 0.
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_MI"
ir(X, r77) :- in("CEN_IA", X), in("CEN_MI", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_MI", X)} = 0.
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_MN"
ir(X, r78) :- in("CEN_IA", X), in("CEN_MN", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_MN", X)} = 0.
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_MO"
ir(X, r79) :- in("CEN_IA", X), in("CEN_MO", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_MO", X)} = 0.
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_NE"
ir(X, r80) :- in("CEN_IA", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_ND"
ir(X, r81) :- in("CEN_IA", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_OH"
ir(X, r82) :- in("CEN_IA", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_SD"
ir(X, r83) :- in("CEN_IA", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_IA", X)} = 0.

% "CEN_IA" ! "CEN_WI"
ir(X, r84) :- in("CEN_IA", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_IA", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_IA", X)} = 0.

% "CEN_KS" ! "CEN_MI"
ir(X, r85) :- in("CEN_KS", X), in("CEN_MI", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_MI", X)} = 0.
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_MN"
ir(X, r86) :- in("CEN_KS", X), in("CEN_MN", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_MN", X)} = 0.
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_MO"
ir(X, r87) :- in("CEN_KS", X), in("CEN_MO", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_MO", X)} = 0.
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_NE"
ir(X, r88) :- in("CEN_KS", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_ND"
ir(X, r89) :- in("CEN_KS", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_OH"
ir(X, r90) :- in("CEN_KS", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_SD"
ir(X, r91) :- in("CEN_KS", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_KS", X)} = 0.

% "CEN_KS" ! "CEN_WI"
ir(X, r92) :- in("CEN_KS", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_KS", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_KS", X)} = 0.

% "CEN_MI" ! "CEN_MN"
ir(X, r93) :- in("CEN_MI", X), in("CEN_MN", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_MN", X)} = 0.
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_MI", X)} = 0.

% "CEN_MI" ! "CEN_MO"
ir(X, r94) :- in("CEN_MI", X), in("CEN_MO", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_MO", X)} = 0.
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_MI", X)} = 0.

% "CEN_MI" ! "CEN_NE"
ir(X, r95) :- in("CEN_MI", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_MI", X)} = 0.

% "CEN_MI" ! "CEN_ND"
ir(X, r96) :- in("CEN_MI", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_MI", X)} = 0.

% "CEN_MI" ! "CEN_OH"
ir(X, r97) :- in("CEN_MI", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_MI", X)} = 0.

% "CEN_MI" ! "CEN_SD"
ir(X, r98) :- in("CEN_MI", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_MI", X)} = 0.

% "CEN_MI" ! "CEN_WI"
ir(X, r99) :- in("CEN_MI", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_MI", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_MI", X)} = 0.

% "CEN_MN" ! "CEN_MO"
ir(X, r100) :- in("CEN_MN", X), in("CEN_MO", X).
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_MO", X)} = 0.
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_MN", X)} = 0.

% "CEN_MN" ! "CEN_NE"
ir(X, r101) :- in("CEN_MN", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_MN", X)} = 0.

% "CEN_MN" ! "CEN_ND"
ir(X, r102) :- in("CEN_MN", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_MN", X)} = 0.

% "CEN_MN" ! "CEN_OH"
ir(X, r103) :- in("CEN_MN", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_MN", X)} = 0.

% "CEN_MN" ! "CEN_SD"
ir(X, r104) :- in("CEN_MN", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_MN", X)} = 0.

% "CEN_MN" ! "CEN_WI"
ir(X, r105) :- in("CEN_MN", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_MN", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_MN", X)} = 0.

% "CEN_MO" ! "CEN_NE"
ir(X, r106) :- in("CEN_MO", X), in("CEN_NE", X).
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_NE", X)} = 0.
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_MO", X)} = 0.

% "CEN_MO" ! "CEN_ND"
ir(X, r107) :- in("CEN_MO", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_MO", X)} = 0.

% "CEN_MO" ! "CEN_OH"
ir(X, r108) :- in("CEN_MO", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_MO", X)} = 0.

% "CEN_MO" ! "CEN_SD"
ir(X, r109) :- in("CEN_MO", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_MO", X)} = 0.

% "CEN_MO" ! "CEN_WI"
ir(X, r110) :- in("CEN_MO", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_MO", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_MO", X)} = 0.

% "CEN_NE" ! "CEN_ND"
ir(X, r111) :- in("CEN_NE", X), in("CEN_ND", X).
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_ND", X)} = 0.
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_NE", X)} = 0.

% "CEN_NE" ! "CEN_OH"
ir(X, r112) :- in("CEN_NE", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_NE", X)} = 0.

% "CEN_NE" ! "CEN_SD"
ir(X, r113) :- in("CEN_NE", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_NE", X)} = 0.

% "CEN_NE" ! "CEN_WI"
ir(X, r114) :- in("CEN_NE", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_NE", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_NE", X)} = 0.

% "CEN_ND" ! "CEN_OH"
ir(X, r115) :- in("CEN_ND", X), in("CEN_OH", X).
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_OH", X)} = 0.
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_ND", X)} = 0.

% "CEN_ND" ! "CEN_SD"
ir(X, r116) :- in("CEN_ND", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_ND", X)} = 0.

% "CEN_ND" ! "CEN_WI"
ir(X, r117) :- in("CEN_ND", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_ND", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_ND", X)} = 0.

% "CEN_OH" ! "CEN_SD"
ir(X, r118) :- in("CEN_OH", X), in("CEN_SD", X).
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_SD", X)} = 0.
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_OH", X)} = 0.

% "CEN_OH" ! "CEN_WI"
ir(X, r119) :- in("CEN_OH", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_OH", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_OH", X)} = 0.

% "CEN_SD" ! "CEN_WI"
ir(X, r120) :- in("CEN_SD", X), in("CEN_WI", X).
:- #count {X : vrs(X), in("CEN_SD", X), out("CEN_WI", X)} = 0.
:- #count {X : vrs(X), in("CEN_WI", X), out("CEN_SD", X)} = 0.

% "CEN_AL" ! "CEN_AR"
ir(X, r133) :- in("CEN_AL", X), in("CEN_AR", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_AR", X)} = 0.
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_DE"
ir(X, r134) :- in("CEN_AL", X), in("CEN_DE", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_DE", X)} = 0.
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_DC"
ir(X, r135) :- in("CEN_AL", X), in("CEN_DC", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_DC", X)} = 0.
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_FL"
ir(X, r136) :- in("CEN_AL", X), in("CEN_FL", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_FL", X)} = 0.
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_GA"
ir(X, r137) :- in("CEN_AL", X), in("CEN_GA", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_GA", X)} = 0.
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_KY"
ir(X, r138) :- in("CEN_AL", X), in("CEN_KY", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_KY", X)} = 0.
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_LA"
ir(X, r139) :- in("CEN_AL", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_MD"
ir(X, r140) :- in("CEN_AL", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_MS"
ir(X, r141) :- in("CEN_AL", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_NC"
ir(X, r142) :- in("CEN_AL", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_OK"
ir(X, r143) :- in("CEN_AL", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_SC"
ir(X, r144) :- in("CEN_AL", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_TN"
ir(X, r145) :- in("CEN_AL", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_TX"
ir(X, r146) :- in("CEN_AL", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_VA"
ir(X, r147) :- in("CEN_AL", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_AL", X)} = 0.

% "CEN_AL" ! "CEN_WV"
ir(X, r148) :- in("CEN_AL", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_AL", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_AL", X)} = 0.

% "CEN_AR" ! "CEN_DE"
ir(X, r149) :- in("CEN_AR", X), in("CEN_DE", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_DE", X)} = 0.
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_DC"
ir(X, r150) :- in("CEN_AR", X), in("CEN_DC", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_DC", X)} = 0.
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_FL"
ir(X, r151) :- in("CEN_AR", X), in("CEN_FL", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_FL", X)} = 0.
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_GA"
ir(X, r152) :- in("CEN_AR", X), in("CEN_GA", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_GA", X)} = 0.
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_KY"
ir(X, r153) :- in("CEN_AR", X), in("CEN_KY", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_KY", X)} = 0.
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_LA"
ir(X, r154) :- in("CEN_AR", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_MD"
ir(X, r155) :- in("CEN_AR", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_MS"
ir(X, r156) :- in("CEN_AR", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_NC"
ir(X, r157) :- in("CEN_AR", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_OK"
ir(X, r158) :- in("CEN_AR", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_SC"
ir(X, r159) :- in("CEN_AR", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_TN"
ir(X, r160) :- in("CEN_AR", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_TX"
ir(X, r161) :- in("CEN_AR", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_VA"
ir(X, r162) :- in("CEN_AR", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_AR", X)} = 0.

% "CEN_AR" ! "CEN_WV"
ir(X, r163) :- in("CEN_AR", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_AR", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_AR", X)} = 0.

% "CEN_DE" ! "CEN_DC"
ir(X, r164) :- in("CEN_DE", X), in("CEN_DC", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_DC", X)} = 0.
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_FL"
ir(X, r165) :- in("CEN_DE", X), in("CEN_FL", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_FL", X)} = 0.
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_GA"
ir(X, r166) :- in("CEN_DE", X), in("CEN_GA", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_GA", X)} = 0.
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_KY"
ir(X, r167) :- in("CEN_DE", X), in("CEN_KY", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_KY", X)} = 0.
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_LA"
ir(X, r168) :- in("CEN_DE", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_MD"
ir(X, r169) :- in("CEN_DE", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_MS"
ir(X, r170) :- in("CEN_DE", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_NC"
ir(X, r171) :- in("CEN_DE", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_OK"
ir(X, r172) :- in("CEN_DE", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_SC"
ir(X, r173) :- in("CEN_DE", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_TN"
ir(X, r174) :- in("CEN_DE", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_TX"
ir(X, r175) :- in("CEN_DE", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_VA"
ir(X, r176) :- in("CEN_DE", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_DE", X)} = 0.

% "CEN_DE" ! "CEN_WV"
ir(X, r177) :- in("CEN_DE", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_DE", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_DE", X)} = 0.

% "CEN_DC" ! "CEN_FL"
ir(X, r178) :- in("CEN_DC", X), in("CEN_FL", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_FL", X)} = 0.
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_GA"
ir(X, r179) :- in("CEN_DC", X), in("CEN_GA", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_GA", X)} = 0.
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_KY"
ir(X, r180) :- in("CEN_DC", X), in("CEN_KY", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_KY", X)} = 0.
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_LA"
ir(X, r181) :- in("CEN_DC", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_MD"
ir(X, r182) :- in("CEN_DC", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_MS"
ir(X, r183) :- in("CEN_DC", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_NC"
ir(X, r184) :- in("CEN_DC", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_OK"
ir(X, r185) :- in("CEN_DC", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_SC"
ir(X, r186) :- in("CEN_DC", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_TN"
ir(X, r187) :- in("CEN_DC", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_TX"
ir(X, r188) :- in("CEN_DC", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_VA"
ir(X, r189) :- in("CEN_DC", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_DC", X)} = 0.

% "CEN_DC" ! "CEN_WV"
ir(X, r190) :- in("CEN_DC", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_DC", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_DC", X)} = 0.

% "CEN_FL" ! "CEN_GA"
ir(X, r191) :- in("CEN_FL", X), in("CEN_GA", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_GA", X)} = 0.
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_KY"
ir(X, r192) :- in("CEN_FL", X), in("CEN_KY", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_KY", X)} = 0.
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_LA"
ir(X, r193) :- in("CEN_FL", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_MD"
ir(X, r194) :- in("CEN_FL", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_MS"
ir(X, r195) :- in("CEN_FL", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_NC"
ir(X, r196) :- in("CEN_FL", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_OK"
ir(X, r197) :- in("CEN_FL", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_SC"
ir(X, r198) :- in("CEN_FL", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_TN"
ir(X, r199) :- in("CEN_FL", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_TX"
ir(X, r200) :- in("CEN_FL", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_VA"
ir(X, r201) :- in("CEN_FL", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_FL", X)} = 0.

% "CEN_FL" ! "CEN_WV"
ir(X, r202) :- in("CEN_FL", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_FL", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_FL", X)} = 0.

% "CEN_GA" ! "CEN_KY"
ir(X, r203) :- in("CEN_GA", X), in("CEN_KY", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_KY", X)} = 0.
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_LA"
ir(X, r204) :- in("CEN_GA", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_MD"
ir(X, r205) :- in("CEN_GA", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_MS"
ir(X, r206) :- in("CEN_GA", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_NC"
ir(X, r207) :- in("CEN_GA", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_OK"
ir(X, r208) :- in("CEN_GA", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_SC"
ir(X, r209) :- in("CEN_GA", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_TN"
ir(X, r210) :- in("CEN_GA", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_TX"
ir(X, r211) :- in("CEN_GA", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_VA"
ir(X, r212) :- in("CEN_GA", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_GA", X)} = 0.

% "CEN_GA" ! "CEN_WV"
ir(X, r213) :- in("CEN_GA", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_GA", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_GA", X)} = 0.

% "CEN_KY" ! "CEN_LA"
ir(X, r214) :- in("CEN_KY", X), in("CEN_LA", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_LA", X)} = 0.
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_MD"
ir(X, r215) :- in("CEN_KY", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_MS"
ir(X, r216) :- in("CEN_KY", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_NC"
ir(X, r217) :- in("CEN_KY", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_OK"
ir(X, r218) :- in("CEN_KY", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_SC"
ir(X, r219) :- in("CEN_KY", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_TN"
ir(X, r220) :- in("CEN_KY", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_TX"
ir(X, r221) :- in("CEN_KY", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_VA"
ir(X, r222) :- in("CEN_KY", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_KY", X)} = 0.

% "CEN_KY" ! "CEN_WV"
ir(X, r223) :- in("CEN_KY", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_KY", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_KY", X)} = 0.

% "CEN_LA" ! "CEN_MD"
ir(X, r224) :- in("CEN_LA", X), in("CEN_MD", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_MD", X)} = 0.
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_MS"
ir(X, r225) :- in("CEN_LA", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_NC"
ir(X, r226) :- in("CEN_LA", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_OK"
ir(X, r227) :- in("CEN_LA", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_SC"
ir(X, r228) :- in("CEN_LA", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_TN"
ir(X, r229) :- in("CEN_LA", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_TX"
ir(X, r230) :- in("CEN_LA", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_VA"
ir(X, r231) :- in("CEN_LA", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_LA", X)} = 0.

% "CEN_LA" ! "CEN_WV"
ir(X, r232) :- in("CEN_LA", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_LA", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_LA", X)} = 0.

% "CEN_MD" ! "CEN_MS"
ir(X, r233) :- in("CEN_MD", X), in("CEN_MS", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_MS", X)} = 0.
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_NC"
ir(X, r234) :- in("CEN_MD", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_OK"
ir(X, r235) :- in("CEN_MD", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_SC"
ir(X, r236) :- in("CEN_MD", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_TN"
ir(X, r237) :- in("CEN_MD", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_TX"
ir(X, r238) :- in("CEN_MD", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_VA"
ir(X, r239) :- in("CEN_MD", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_MD", X)} = 0.

% "CEN_MD" ! "CEN_WV"
ir(X, r240) :- in("CEN_MD", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_MD", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_MD", X)} = 0.

% "CEN_MS" ! "CEN_NC"
ir(X, r241) :- in("CEN_MS", X), in("CEN_NC", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_NC", X)} = 0.
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_MS", X)} = 0.

% "CEN_MS" ! "CEN_OK"
ir(X, r242) :- in("CEN_MS", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_MS", X)} = 0.

% "CEN_MS" ! "CEN_SC"
ir(X, r243) :- in("CEN_MS", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_MS", X)} = 0.

% "CEN_MS" ! "CEN_TN"
ir(X, r244) :- in("CEN_MS", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_MS", X)} = 0.

% "CEN_MS" ! "CEN_TX"
ir(X, r245) :- in("CEN_MS", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_MS", X)} = 0.

% "CEN_MS" ! "CEN_VA"
ir(X, r246) :- in("CEN_MS", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_MS", X)} = 0.

% "CEN_MS" ! "CEN_WV"
ir(X, r247) :- in("CEN_MS", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_MS", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_MS", X)} = 0.

% "CEN_NC" ! "CEN_OK"
ir(X, r248) :- in("CEN_NC", X), in("CEN_OK", X).
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_OK", X)} = 0.
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_NC", X)} = 0.

% "CEN_NC" ! "CEN_SC"
ir(X, r249) :- in("CEN_NC", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_NC", X)} = 0.

% "CEN_NC" ! "CEN_TN"
ir(X, r250) :- in("CEN_NC", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_NC", X)} = 0.

% "CEN_NC" ! "CEN_TX"
ir(X, r251) :- in("CEN_NC", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_NC", X)} = 0.

% "CEN_NC" ! "CEN_VA"
ir(X, r252) :- in("CEN_NC", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_NC", X)} = 0.

% "CEN_NC" ! "CEN_WV"
ir(X, r253) :- in("CEN_NC", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_NC", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_NC", X)} = 0.

% "CEN_OK" ! "CEN_SC"
ir(X, r254) :- in("CEN_OK", X), in("CEN_SC", X).
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_SC", X)} = 0.
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_OK", X)} = 0.

% "CEN_OK" ! "CEN_TN"
ir(X, r255) :- in("CEN_OK", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_OK", X)} = 0.

% "CEN_OK" ! "CEN_TX"
ir(X, r256) :- in("CEN_OK", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_OK", X)} = 0.

% "CEN_OK" ! "CEN_VA"
ir(X, r257) :- in("CEN_OK", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_OK", X)} = 0.

% "CEN_OK" ! "CEN_WV"
ir(X, r258) :- in("CEN_OK", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_OK", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_OK", X)} = 0.

% "CEN_SC" ! "CEN_TN"
ir(X, r259) :- in("CEN_SC", X), in("CEN_TN", X).
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_TN", X)} = 0.
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_SC", X)} = 0.

% "CEN_SC" ! "CEN_TX"
ir(X, r260) :- in("CEN_SC", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_SC", X)} = 0.

% "CEN_SC" ! "CEN_VA"
ir(X, r261) :- in("CEN_SC", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_SC", X)} = 0.

% "CEN_SC" ! "CEN_WV"
ir(X, r262) :- in("CEN_SC", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_SC", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_SC", X)} = 0.

% "CEN_TN" ! "CEN_TX"
ir(X, r263) :- in("CEN_TN", X), in("CEN_TX", X).
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_TX", X)} = 0.
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_TN", X)} = 0.

% "CEN_TN" ! "CEN_VA"
ir(X, r264) :- in("CEN_TN", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_TN", X)} = 0.

% "CEN_TN" ! "CEN_WV"
ir(X, r265) :- in("CEN_TN", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_TN", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_TN", X)} = 0.

% "CEN_TX" ! "CEN_VA"
ir(X, r266) :- in("CEN_TX", X), in("CEN_VA", X).
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_VA", X)} = 0.
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_TX", X)} = 0.

% "CEN_TX" ! "CEN_WV"
ir(X, r267) :- in("CEN_TX", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_TX", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_TX", X)} = 0.

% "CEN_VA" ! "CEN_WV"
ir(X, r268) :- in("CEN_VA", X), in("CEN_WV", X).
:- #count {X : vrs(X), in("CEN_VA", X), out("CEN_WV", X)} = 0.
:- #count {X : vrs(X), in("CEN_WV", X), out("CEN_VA", X)} = 0.

% "CEN_AZ" ! "CEN_CA"
ir(X, r286) :- in("CEN_AZ", X), in("CEN_CA", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_CA", X)} = 0.
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_CO"
ir(X, r287) :- in("CEN_AZ", X), in("CEN_CO", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_CO", X)} = 0.
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_ID"
ir(X, r288) :- in("CEN_AZ", X), in("CEN_ID", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_ID", X)} = 0.
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_MT"
ir(X, r289) :- in("CEN_AZ", X), in("CEN_MT", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_MT", X)} = 0.
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_NV"
ir(X, r290) :- in("CEN_AZ", X), in("CEN_NV", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_NV", X)} = 0.
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_NM"
ir(X, r291) :- in("CEN_AZ", X), in("CEN_NM", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_NM", X)} = 0.
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_OR"
ir(X, r292) :- in("CEN_AZ", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_UT"
ir(X, r293) :- in("CEN_AZ", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_WA"
ir(X, r294) :- in("CEN_AZ", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_AZ", X)} = 0.

% "CEN_AZ" ! "CEN_WY"
ir(X, r295) :- in("CEN_AZ", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_AZ", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_AZ", X)} = 0.

% "CEN_CA" ! "CEN_CO"
ir(X, r296) :- in("CEN_CA", X), in("CEN_CO", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_CO", X)} = 0.
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_ID"
ir(X, r297) :- in("CEN_CA", X), in("CEN_ID", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_ID", X)} = 0.
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_MT"
ir(X, r298) :- in("CEN_CA", X), in("CEN_MT", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_MT", X)} = 0.
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_NV"
ir(X, r299) :- in("CEN_CA", X), in("CEN_NV", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_NV", X)} = 0.
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_NM"
ir(X, r300) :- in("CEN_CA", X), in("CEN_NM", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_NM", X)} = 0.
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_OR"
ir(X, r301) :- in("CEN_CA", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_UT"
ir(X, r302) :- in("CEN_CA", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_WA"
ir(X, r303) :- in("CEN_CA", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_CA", X)} = 0.

% "CEN_CA" ! "CEN_WY"
ir(X, r304) :- in("CEN_CA", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_CA", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_CA", X)} = 0.

% "CEN_CO" ! "CEN_ID"
ir(X, r305) :- in("CEN_CO", X), in("CEN_ID", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_ID", X)} = 0.
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_MT"
ir(X, r306) :- in("CEN_CO", X), in("CEN_MT", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_MT", X)} = 0.
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_NV"
ir(X, r307) :- in("CEN_CO", X), in("CEN_NV", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_NV", X)} = 0.
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_NM"
ir(X, r308) :- in("CEN_CO", X), in("CEN_NM", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_NM", X)} = 0.
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_OR"
ir(X, r309) :- in("CEN_CO", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_UT"
ir(X, r310) :- in("CEN_CO", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_WA"
ir(X, r311) :- in("CEN_CO", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_CO", X)} = 0.

% "CEN_CO" ! "CEN_WY"
ir(X, r312) :- in("CEN_CO", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_CO", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_CO", X)} = 0.

% "CEN_ID" ! "CEN_MT"
ir(X, r313) :- in("CEN_ID", X), in("CEN_MT", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_MT", X)} = 0.
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_ID", X)} = 0.

% "CEN_ID" ! "CEN_NV"
ir(X, r314) :- in("CEN_ID", X), in("CEN_NV", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_NV", X)} = 0.
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_ID", X)} = 0.

% "CEN_ID" ! "CEN_NM"
ir(X, r315) :- in("CEN_ID", X), in("CEN_NM", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_NM", X)} = 0.
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_ID", X)} = 0.

% "CEN_ID" ! "CEN_OR"
ir(X, r316) :- in("CEN_ID", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_ID", X)} = 0.

% "CEN_ID" ! "CEN_UT"
ir(X, r317) :- in("CEN_ID", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_ID", X)} = 0.

% "CEN_ID" ! "CEN_WA"
ir(X, r318) :- in("CEN_ID", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_ID", X)} = 0.

% "CEN_ID" ! "CEN_WY"
ir(X, r319) :- in("CEN_ID", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_ID", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_ID", X)} = 0.

% "CEN_MT" ! "CEN_NV"
ir(X, r320) :- in("CEN_MT", X), in("CEN_NV", X).
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_NV", X)} = 0.
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_MT", X)} = 0.

% "CEN_MT" ! "CEN_NM"
ir(X, r321) :- in("CEN_MT", X), in("CEN_NM", X).
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_NM", X)} = 0.
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_MT", X)} = 0.

% "CEN_MT" ! "CEN_OR"
ir(X, r322) :- in("CEN_MT", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_MT", X)} = 0.

% "CEN_MT" ! "CEN_UT"
ir(X, r323) :- in("CEN_MT", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_MT", X)} = 0.

% "CEN_MT" ! "CEN_WA"
ir(X, r324) :- in("CEN_MT", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_MT", X)} = 0.

% "CEN_MT" ! "CEN_WY"
ir(X, r325) :- in("CEN_MT", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_MT", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_MT", X)} = 0.

% "CEN_NV" ! "CEN_NM"
ir(X, r326) :- in("CEN_NV", X), in("CEN_NM", X).
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_NM", X)} = 0.
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_NV", X)} = 0.

% "CEN_NV" ! "CEN_OR"
ir(X, r327) :- in("CEN_NV", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_NV", X)} = 0.

% "CEN_NV" ! "CEN_UT"
ir(X, r328) :- in("CEN_NV", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_NV", X)} = 0.

% "CEN_NV" ! "CEN_WA"
ir(X, r329) :- in("CEN_NV", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_NV", X)} = 0.

% "CEN_NV" ! "CEN_WY"
ir(X, r330) :- in("CEN_NV", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_NV", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_NV", X)} = 0.

% "CEN_NM" ! "CEN_OR"
ir(X, r331) :- in("CEN_NM", X), in("CEN_OR", X).
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_OR", X)} = 0.
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_NM", X)} = 0.

% "CEN_NM" ! "CEN_UT"
ir(X, r332) :- in("CEN_NM", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_NM", X)} = 0.

% "CEN_NM" ! "CEN_WA"
ir(X, r333) :- in("CEN_NM", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_NM", X)} = 0.

% "CEN_NM" ! "CEN_WY"
ir(X, r334) :- in("CEN_NM", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_NM", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_NM", X)} = 0.

% "CEN_OR" ! "CEN_UT"
ir(X, r335) :- in("CEN_OR", X), in("CEN_UT", X).
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_UT", X)} = 0.
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_OR", X)} = 0.

% "CEN_OR" ! "CEN_WA"
ir(X, r336) :- in("CEN_OR", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_OR", X)} = 0.

% "CEN_OR" ! "CEN_WY"
ir(X, r337) :- in("CEN_OR", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_OR", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_OR", X)} = 0.

% "CEN_UT" ! "CEN_WA"
ir(X, r338) :- in("CEN_UT", X), in("CEN_WA", X).
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_WA", X)} = 0.
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_UT", X)} = 0.

% "CEN_UT" ! "CEN_WY"
ir(X, r339) :- in("CEN_UT", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_UT", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_UT", X)} = 0.

% "CEN_WA" ! "CEN_WY"
ir(X, r340) :- in("CEN_WA", X), in("CEN_WY", X).
:- #count {X : vrs(X), in("CEN_WA", X), out("CEN_WY", X)} = 0.
:- #count {X : vrs(X), in("CEN_WY", X), out("CEN_WA", X)} = 0.

% "NDC_Midwest" ! "NDC_Northeast"
ir(X, r352) :- in("NDC_Midwest", X), in("NDC_Northeast", X).
:- #count {X : vrs(X), in("NDC_Midwest", X), out("NDC_Northeast", X)} = 0.
:- #count {X : vrs(X), in("NDC_Northeast", X), out("NDC_Midwest", X)} = 0.

% "NDC_Midwest" ! "NDC_Southeast"
ir(X, r353) :- in("NDC_Midwest", X), in("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_Midwest", X), out("NDC_Southeast", X)} = 0.
:- #count {X : vrs(X), in("NDC_Southeast", X), out("NDC_Midwest", X)} = 0.

% "NDC_Midwest" ! "NDC_Southwest"
ir(X, r354) :- in("NDC_Midwest", X), in("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_Midwest", X), out("NDC_Southwest", X)} = 0.
:- #count {X : vrs(X), in("NDC_Southwest", X), out("NDC_Midwest", X)} = 0.

% "NDC_Midwest" ! "NDC_West"
ir(X, r355) :- in("NDC_Midwest", X), in("NDC_West", X).
:- #count {X : vrs(X), in("NDC_Midwest", X), out("NDC_West", X)} = 0.
:- #count {X : vrs(X), in("NDC_West", X), out("NDC_Midwest", X)} = 0.

% "NDC_Northeast" ! "NDC_Southeast"
ir(X, r356) :- in("NDC_Northeast", X), in("NDC_Southeast", X).
:- #count {X : vrs(X), in("NDC_Northeast", X), out("NDC_Southeast", X)} = 0.
:- #count {X : vrs(X), in("NDC_Southeast", X), out("NDC_Northeast", X)} = 0.

% "NDC_Northeast" ! "NDC_Southwest"
ir(X, r357) :- in("NDC_Northeast", X), in("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_Northeast", X), out("NDC_Southwest", X)} = 0.
:- #count {X : vrs(X), in("NDC_Southwest", X), out("NDC_Northeast", X)} = 0.

% "NDC_Northeast" ! "NDC_West"
ir(X, r358) :- in("NDC_Northeast", X), in("NDC_West", X).
:- #count {X : vrs(X), in("NDC_Northeast", X), out("NDC_West", X)} = 0.
:- #count {X : vrs(X), in("NDC_West", X), out("NDC_Northeast", X)} = 0.

% "NDC_Southeast" ! "NDC_Southwest"
ir(X, r359) :- in("NDC_Southeast", X), in("NDC_Southwest", X).
:- #count {X : vrs(X), in("NDC_Southeast", X), out("NDC_Southwest", X)} = 0.
:- #count {X : vrs(X), in("NDC_Southwest", X), out("NDC_Southeast", X)} = 0.

% "NDC_Southeast" ! "NDC_West"
ir(X, r360) :- in("NDC_Southeast", X), in("NDC_West", X).
:- #count {X : vrs(X), in("NDC_Southeast", X), out("NDC_West", X)} = 0.
:- #count {X : vrs(X), in("NDC_West", X), out("NDC_Southeast", X)} = 0.

% "NDC_Southwest" ! "NDC_West"
ir(X, r361) :- in("NDC_Southwest", X), in("NDC_West", X).
:- #count {X : vrs(X), in("NDC_Southwest", X), out("NDC_West", X)} = 0.
:- #count {X : vrs(X), in("NDC_West", X), out("NDC_Southwest", X)} = 0.

% "NDC_IA" ! "NDC_IL"
ir(X, r367) :- in("NDC_IA", X), in("NDC_IL", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_IL", X)} = 0.
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_IN"
ir(X, r368) :- in("NDC_IA", X), in("NDC_IN", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_IN", X)} = 0.
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_KS"
ir(X, r369) :- in("NDC_IA", X), in("NDC_KS", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_KS", X)} = 0.
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_MI"
ir(X, r370) :- in("NDC_IA", X), in("NDC_MI", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_MI", X)} = 0.
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_MN"
ir(X, r371) :- in("NDC_IA", X), in("NDC_MN", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_MN", X)} = 0.
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_MO"
ir(X, r372) :- in("NDC_IA", X), in("NDC_MO", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_MO", X)} = 0.
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_ND"
ir(X, r373) :- in("NDC_IA", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_NE"
ir(X, r374) :- in("NDC_IA", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_OH"
ir(X, r375) :- in("NDC_IA", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_SD"
ir(X, r376) :- in("NDC_IA", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_IA", X)} = 0.

% "NDC_IA" ! "NDC_WI"
ir(X, r377) :- in("NDC_IA", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_IA", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_IA", X)} = 0.

% "NDC_IL" ! "NDC_IN"
ir(X, r378) :- in("NDC_IL", X), in("NDC_IN", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_IN", X)} = 0.
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_KS"
ir(X, r379) :- in("NDC_IL", X), in("NDC_KS", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_KS", X)} = 0.
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_MI"
ir(X, r380) :- in("NDC_IL", X), in("NDC_MI", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_MI", X)} = 0.
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_MN"
ir(X, r381) :- in("NDC_IL", X), in("NDC_MN", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_MN", X)} = 0.
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_MO"
ir(X, r382) :- in("NDC_IL", X), in("NDC_MO", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_MO", X)} = 0.
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_ND"
ir(X, r383) :- in("NDC_IL", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_NE"
ir(X, r384) :- in("NDC_IL", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_OH"
ir(X, r385) :- in("NDC_IL", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_SD"
ir(X, r386) :- in("NDC_IL", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_IL", X)} = 0.

% "NDC_IL" ! "NDC_WI"
ir(X, r387) :- in("NDC_IL", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_IL", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_IL", X)} = 0.

% "NDC_IN" ! "NDC_KS"
ir(X, r388) :- in("NDC_IN", X), in("NDC_KS", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_KS", X)} = 0.
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_MI"
ir(X, r389) :- in("NDC_IN", X), in("NDC_MI", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_MI", X)} = 0.
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_MN"
ir(X, r390) :- in("NDC_IN", X), in("NDC_MN", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_MN", X)} = 0.
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_MO"
ir(X, r391) :- in("NDC_IN", X), in("NDC_MO", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_MO", X)} = 0.
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_ND"
ir(X, r392) :- in("NDC_IN", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_NE"
ir(X, r393) :- in("NDC_IN", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_OH"
ir(X, r394) :- in("NDC_IN", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_SD"
ir(X, r395) :- in("NDC_IN", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_IN", X)} = 0.

% "NDC_IN" ! "NDC_WI"
ir(X, r396) :- in("NDC_IN", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_IN", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_IN", X)} = 0.

% "NDC_KS" ! "NDC_MI"
ir(X, r397) :- in("NDC_KS", X), in("NDC_MI", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_MI", X)} = 0.
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_MN"
ir(X, r398) :- in("NDC_KS", X), in("NDC_MN", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_MN", X)} = 0.
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_MO"
ir(X, r399) :- in("NDC_KS", X), in("NDC_MO", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_MO", X)} = 0.
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_ND"
ir(X, r400) :- in("NDC_KS", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_NE"
ir(X, r401) :- in("NDC_KS", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_OH"
ir(X, r402) :- in("NDC_KS", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_SD"
ir(X, r403) :- in("NDC_KS", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_KS", X)} = 0.

% "NDC_KS" ! "NDC_WI"
ir(X, r404) :- in("NDC_KS", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_KS", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_KS", X)} = 0.

% "NDC_MI" ! "NDC_MN"
ir(X, r405) :- in("NDC_MI", X), in("NDC_MN", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_MN", X)} = 0.
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_MI", X)} = 0.

% "NDC_MI" ! "NDC_MO"
ir(X, r406) :- in("NDC_MI", X), in("NDC_MO", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_MO", X)} = 0.
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_MI", X)} = 0.

% "NDC_MI" ! "NDC_ND"
ir(X, r407) :- in("NDC_MI", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_MI", X)} = 0.

% "NDC_MI" ! "NDC_NE"
ir(X, r408) :- in("NDC_MI", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_MI", X)} = 0.

% "NDC_MI" ! "NDC_OH"
ir(X, r409) :- in("NDC_MI", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_MI", X)} = 0.

% "NDC_MI" ! "NDC_SD"
ir(X, r410) :- in("NDC_MI", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_MI", X)} = 0.

% "NDC_MI" ! "NDC_WI"
ir(X, r411) :- in("NDC_MI", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_MI", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_MI", X)} = 0.

% "NDC_MN" ! "NDC_MO"
ir(X, r412) :- in("NDC_MN", X), in("NDC_MO", X).
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_MO", X)} = 0.
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_MN", X)} = 0.

% "NDC_MN" ! "NDC_ND"
ir(X, r413) :- in("NDC_MN", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_MN", X)} = 0.

% "NDC_MN" ! "NDC_NE"
ir(X, r414) :- in("NDC_MN", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_MN", X)} = 0.

% "NDC_MN" ! "NDC_OH"
ir(X, r415) :- in("NDC_MN", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_MN", X)} = 0.

% "NDC_MN" ! "NDC_SD"
ir(X, r416) :- in("NDC_MN", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_MN", X)} = 0.

% "NDC_MN" ! "NDC_WI"
ir(X, r417) :- in("NDC_MN", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_MN", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_MN", X)} = 0.

% "NDC_MO" ! "NDC_ND"
ir(X, r418) :- in("NDC_MO", X), in("NDC_ND", X).
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_ND", X)} = 0.
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_MO", X)} = 0.

% "NDC_MO" ! "NDC_NE"
ir(X, r419) :- in("NDC_MO", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_MO", X)} = 0.

% "NDC_MO" ! "NDC_OH"
ir(X, r420) :- in("NDC_MO", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_MO", X)} = 0.

% "NDC_MO" ! "NDC_SD"
ir(X, r421) :- in("NDC_MO", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_MO", X)} = 0.

% "NDC_MO" ! "NDC_WI"
ir(X, r422) :- in("NDC_MO", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_MO", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_MO", X)} = 0.

% "NDC_ND" ! "NDC_NE"
ir(X, r423) :- in("NDC_ND", X), in("NDC_NE", X).
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_NE", X)} = 0.
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_ND", X)} = 0.

% "NDC_ND" ! "NDC_OH"
ir(X, r424) :- in("NDC_ND", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_ND", X)} = 0.

% "NDC_ND" ! "NDC_SD"
ir(X, r425) :- in("NDC_ND", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_ND", X)} = 0.

% "NDC_ND" ! "NDC_WI"
ir(X, r426) :- in("NDC_ND", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_ND", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_ND", X)} = 0.

% "NDC_NE" ! "NDC_OH"
ir(X, r427) :- in("NDC_NE", X), in("NDC_OH", X).
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_OH", X)} = 0.
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_NE", X)} = 0.

% "NDC_NE" ! "NDC_SD"
ir(X, r428) :- in("NDC_NE", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_NE", X)} = 0.

% "NDC_NE" ! "NDC_WI"
ir(X, r429) :- in("NDC_NE", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_NE", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_NE", X)} = 0.

% "NDC_OH" ! "NDC_SD"
ir(X, r430) :- in("NDC_OH", X), in("NDC_SD", X).
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_SD", X)} = 0.
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_OH", X)} = 0.

% "NDC_OH" ! "NDC_WI"
ir(X, r431) :- in("NDC_OH", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_OH", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_OH", X)} = 0.

% "NDC_SD" ! "NDC_WI"
ir(X, r432) :- in("NDC_SD", X), in("NDC_WI", X).
:- #count {X : vrs(X), in("NDC_SD", X), out("NDC_WI", X)} = 0.
:- #count {X : vrs(X), in("NDC_WI", X), out("NDC_SD", X)} = 0.

% "NDC_CT" ! "NDC_DC"
ir(X, r445) :- in("NDC_CT", X), in("NDC_DC", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_DC", X)} = 0.
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_DE"
ir(X, r446) :- in("NDC_CT", X), in("NDC_DE", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_DE", X)} = 0.
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_MD"
ir(X, r447) :- in("NDC_CT", X), in("NDC_MD", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_MD", X)} = 0.
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_MA"
ir(X, r448) :- in("NDC_CT", X), in("NDC_MA", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_MA", X)} = 0.
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_ME"
ir(X, r449) :- in("NDC_CT", X), in("NDC_ME", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_ME", X)} = 0.
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_NH"
ir(X, r450) :- in("NDC_CT", X), in("NDC_NH", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_NH", X)} = 0.
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_NJ"
ir(X, r451) :- in("NDC_CT", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_NY"
ir(X, r452) :- in("NDC_CT", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_PA"
ir(X, r453) :- in("NDC_CT", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_RI"
ir(X, r454) :- in("NDC_CT", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_CT", X)} = 0.

% "NDC_CT" ! "NDC_VT"
ir(X, r455) :- in("NDC_CT", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_CT", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_CT", X)} = 0.

% "NDC_DC" ! "NDC_DE"
ir(X, r456) :- in("NDC_DC", X), in("NDC_DE", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_DE", X)} = 0.
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_MD"
ir(X, r457) :- in("NDC_DC", X), in("NDC_MD", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_MD", X)} = 0.
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_MA"
ir(X, r458) :- in("NDC_DC", X), in("NDC_MA", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_MA", X)} = 0.
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_ME"
ir(X, r459) :- in("NDC_DC", X), in("NDC_ME", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_ME", X)} = 0.
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_NH"
ir(X, r460) :- in("NDC_DC", X), in("NDC_NH", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_NH", X)} = 0.
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_NJ"
ir(X, r461) :- in("NDC_DC", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_NY"
ir(X, r462) :- in("NDC_DC", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_PA"
ir(X, r463) :- in("NDC_DC", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_RI"
ir(X, r464) :- in("NDC_DC", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_DC", X)} = 0.

% "NDC_DC" ! "NDC_VT"
ir(X, r465) :- in("NDC_DC", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_DC", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_DC", X)} = 0.

% "NDC_DE" ! "NDC_MD"
ir(X, r466) :- in("NDC_DE", X), in("NDC_MD", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_MD", X)} = 0.
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_MA"
ir(X, r467) :- in("NDC_DE", X), in("NDC_MA", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_MA", X)} = 0.
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_ME"
ir(X, r468) :- in("NDC_DE", X), in("NDC_ME", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_ME", X)} = 0.
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_NH"
ir(X, r469) :- in("NDC_DE", X), in("NDC_NH", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_NH", X)} = 0.
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_NJ"
ir(X, r470) :- in("NDC_DE", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_NY"
ir(X, r471) :- in("NDC_DE", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_PA"
ir(X, r472) :- in("NDC_DE", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_RI"
ir(X, r473) :- in("NDC_DE", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_DE", X)} = 0.

% "NDC_DE" ! "NDC_VT"
ir(X, r474) :- in("NDC_DE", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_DE", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_DE", X)} = 0.

% "NDC_MD" ! "NDC_MA"
ir(X, r475) :- in("NDC_MD", X), in("NDC_MA", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_MA", X)} = 0.
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_ME"
ir(X, r476) :- in("NDC_MD", X), in("NDC_ME", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_ME", X)} = 0.
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_NH"
ir(X, r477) :- in("NDC_MD", X), in("NDC_NH", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_NH", X)} = 0.
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_NJ"
ir(X, r478) :- in("NDC_MD", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_NY"
ir(X, r479) :- in("NDC_MD", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_PA"
ir(X, r480) :- in("NDC_MD", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_RI"
ir(X, r481) :- in("NDC_MD", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_MD", X)} = 0.

% "NDC_MD" ! "NDC_VT"
ir(X, r482) :- in("NDC_MD", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_MD", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_MD", X)} = 0.

% "NDC_MA" ! "NDC_ME"
ir(X, r483) :- in("NDC_MA", X), in("NDC_ME", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_ME", X)} = 0.
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_MA", X)} = 0.

% "NDC_MA" ! "NDC_NH"
ir(X, r484) :- in("NDC_MA", X), in("NDC_NH", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_NH", X)} = 0.
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_MA", X)} = 0.

% "NDC_MA" ! "NDC_NJ"
ir(X, r485) :- in("NDC_MA", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_MA", X)} = 0.

% "NDC_MA" ! "NDC_NY"
ir(X, r486) :- in("NDC_MA", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_MA", X)} = 0.

% "NDC_MA" ! "NDC_PA"
ir(X, r487) :- in("NDC_MA", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_MA", X)} = 0.

% "NDC_MA" ! "NDC_RI"
ir(X, r488) :- in("NDC_MA", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_MA", X)} = 0.

% "NDC_MA" ! "NDC_VT"
ir(X, r489) :- in("NDC_MA", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_MA", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_MA", X)} = 0.

% "NDC_ME" ! "NDC_NH"
ir(X, r490) :- in("NDC_ME", X), in("NDC_NH", X).
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_NH", X)} = 0.
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_ME", X)} = 0.

% "NDC_ME" ! "NDC_NJ"
ir(X, r491) :- in("NDC_ME", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_ME", X)} = 0.

% "NDC_ME" ! "NDC_NY"
ir(X, r492) :- in("NDC_ME", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_ME", X)} = 0.

% "NDC_ME" ! "NDC_PA"
ir(X, r493) :- in("NDC_ME", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_ME", X)} = 0.

% "NDC_ME" ! "NDC_RI"
ir(X, r494) :- in("NDC_ME", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_ME", X)} = 0.

% "NDC_ME" ! "NDC_VT"
ir(X, r495) :- in("NDC_ME", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_ME", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_ME", X)} = 0.

% "NDC_NH" ! "NDC_NJ"
ir(X, r496) :- in("NDC_NH", X), in("NDC_NJ", X).
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_NJ", X)} = 0.
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_NH", X)} = 0.

% "NDC_NH" ! "NDC_NY"
ir(X, r497) :- in("NDC_NH", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_NH", X)} = 0.

% "NDC_NH" ! "NDC_PA"
ir(X, r498) :- in("NDC_NH", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_NH", X)} = 0.

% "NDC_NH" ! "NDC_RI"
ir(X, r499) :- in("NDC_NH", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_NH", X)} = 0.

% "NDC_NH" ! "NDC_VT"
ir(X, r500) :- in("NDC_NH", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_NH", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_NH", X)} = 0.

% "NDC_NJ" ! "NDC_NY"
ir(X, r501) :- in("NDC_NJ", X), in("NDC_NY", X).
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_NY", X)} = 0.
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_NJ", X)} = 0.

% "NDC_NJ" ! "NDC_PA"
ir(X, r502) :- in("NDC_NJ", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_NJ", X)} = 0.

% "NDC_NJ" ! "NDC_RI"
ir(X, r503) :- in("NDC_NJ", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_NJ", X)} = 0.

% "NDC_NJ" ! "NDC_VT"
ir(X, r504) :- in("NDC_NJ", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_NJ", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_NJ", X)} = 0.

% "NDC_NY" ! "NDC_PA"
ir(X, r505) :- in("NDC_NY", X), in("NDC_PA", X).
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_PA", X)} = 0.
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_NY", X)} = 0.

% "NDC_NY" ! "NDC_RI"
ir(X, r506) :- in("NDC_NY", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_NY", X)} = 0.

% "NDC_NY" ! "NDC_VT"
ir(X, r507) :- in("NDC_NY", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_NY", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_NY", X)} = 0.

% "NDC_PA" ! "NDC_RI"
ir(X, r508) :- in("NDC_PA", X), in("NDC_RI", X).
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_RI", X)} = 0.
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_PA", X)} = 0.

% "NDC_PA" ! "NDC_VT"
ir(X, r509) :- in("NDC_PA", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_PA", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_PA", X)} = 0.

% "NDC_RI" ! "NDC_VT"
ir(X, r510) :- in("NDC_RI", X), in("NDC_VT", X).
:- #count {X : vrs(X), in("NDC_RI", X), out("NDC_VT", X)} = 0.
:- #count {X : vrs(X), in("NDC_VT", X), out("NDC_RI", X)} = 0.

% "NDC_AL" ! "NDC_AR"
ir(X, r523) :- in("NDC_AL", X), in("NDC_AR", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_AR", X)} = 0.
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_FL"
ir(X, r524) :- in("NDC_AL", X), in("NDC_FL", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_FL", X)} = 0.
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_GA"
ir(X, r525) :- in("NDC_AL", X), in("NDC_GA", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_GA", X)} = 0.
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_KY"
ir(X, r526) :- in("NDC_AL", X), in("NDC_KY", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_KY", X)} = 0.
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_LA"
ir(X, r527) :- in("NDC_AL", X), in("NDC_LA", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_LA", X)} = 0.
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_MS"
ir(X, r528) :- in("NDC_AL", X), in("NDC_MS", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_MS", X)} = 0.
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_NC"
ir(X, r529) :- in("NDC_AL", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_SC"
ir(X, r530) :- in("NDC_AL", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_TN"
ir(X, r531) :- in("NDC_AL", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_VA"
ir(X, r532) :- in("NDC_AL", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_AL", X)} = 0.

% "NDC_AL" ! "NDC_WV"
ir(X, r533) :- in("NDC_AL", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_AL", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_AL", X)} = 0.

% "NDC_AR" ! "NDC_FL"
ir(X, r534) :- in("NDC_AR", X), in("NDC_FL", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_FL", X)} = 0.
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_GA"
ir(X, r535) :- in("NDC_AR", X), in("NDC_GA", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_GA", X)} = 0.
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_KY"
ir(X, r536) :- in("NDC_AR", X), in("NDC_KY", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_KY", X)} = 0.
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_LA"
ir(X, r537) :- in("NDC_AR", X), in("NDC_LA", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_LA", X)} = 0.
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_MS"
ir(X, r538) :- in("NDC_AR", X), in("NDC_MS", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_MS", X)} = 0.
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_NC"
ir(X, r539) :- in("NDC_AR", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_SC"
ir(X, r540) :- in("NDC_AR", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_TN"
ir(X, r541) :- in("NDC_AR", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_VA"
ir(X, r542) :- in("NDC_AR", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_AR", X)} = 0.

% "NDC_AR" ! "NDC_WV"
ir(X, r543) :- in("NDC_AR", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_AR", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_AR", X)} = 0.

% "NDC_FL" ! "NDC_GA"
ir(X, r544) :- in("NDC_FL", X), in("NDC_GA", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_GA", X)} = 0.
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_KY"
ir(X, r545) :- in("NDC_FL", X), in("NDC_KY", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_KY", X)} = 0.
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_LA"
ir(X, r546) :- in("NDC_FL", X), in("NDC_LA", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_LA", X)} = 0.
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_MS"
ir(X, r547) :- in("NDC_FL", X), in("NDC_MS", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_MS", X)} = 0.
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_NC"
ir(X, r548) :- in("NDC_FL", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_SC"
ir(X, r549) :- in("NDC_FL", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_TN"
ir(X, r550) :- in("NDC_FL", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_VA"
ir(X, r551) :- in("NDC_FL", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_FL", X)} = 0.

% "NDC_FL" ! "NDC_WV"
ir(X, r552) :- in("NDC_FL", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_FL", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_FL", X)} = 0.

% "NDC_GA" ! "NDC_KY"
ir(X, r553) :- in("NDC_GA", X), in("NDC_KY", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_KY", X)} = 0.
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_LA"
ir(X, r554) :- in("NDC_GA", X), in("NDC_LA", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_LA", X)} = 0.
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_MS"
ir(X, r555) :- in("NDC_GA", X), in("NDC_MS", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_MS", X)} = 0.
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_NC"
ir(X, r556) :- in("NDC_GA", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_SC"
ir(X, r557) :- in("NDC_GA", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_TN"
ir(X, r558) :- in("NDC_GA", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_VA"
ir(X, r559) :- in("NDC_GA", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_GA", X)} = 0.

% "NDC_GA" ! "NDC_WV"
ir(X, r560) :- in("NDC_GA", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_GA", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_GA", X)} = 0.

% "NDC_KY" ! "NDC_LA"
ir(X, r561) :- in("NDC_KY", X), in("NDC_LA", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_LA", X)} = 0.
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_KY", X)} = 0.

% "NDC_KY" ! "NDC_MS"
ir(X, r562) :- in("NDC_KY", X), in("NDC_MS", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_MS", X)} = 0.
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_KY", X)} = 0.

% "NDC_KY" ! "NDC_NC"
ir(X, r563) :- in("NDC_KY", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_KY", X)} = 0.

% "NDC_KY" ! "NDC_SC"
ir(X, r564) :- in("NDC_KY", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_KY", X)} = 0.

% "NDC_KY" ! "NDC_TN"
ir(X, r565) :- in("NDC_KY", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_KY", X)} = 0.

% "NDC_KY" ! "NDC_VA"
ir(X, r566) :- in("NDC_KY", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_KY", X)} = 0.

% "NDC_KY" ! "NDC_WV"
ir(X, r567) :- in("NDC_KY", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_KY", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_KY", X)} = 0.

% "NDC_LA" ! "NDC_MS"
ir(X, r568) :- in("NDC_LA", X), in("NDC_MS", X).
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_MS", X)} = 0.
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_LA", X)} = 0.

% "NDC_LA" ! "NDC_NC"
ir(X, r569) :- in("NDC_LA", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_LA", X)} = 0.

% "NDC_LA" ! "NDC_SC"
ir(X, r570) :- in("NDC_LA", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_LA", X)} = 0.

% "NDC_LA" ! "NDC_TN"
ir(X, r571) :- in("NDC_LA", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_LA", X)} = 0.

% "NDC_LA" ! "NDC_VA"
ir(X, r572) :- in("NDC_LA", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_LA", X)} = 0.

% "NDC_LA" ! "NDC_WV"
ir(X, r573) :- in("NDC_LA", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_LA", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_LA", X)} = 0.

% "NDC_MS" ! "NDC_NC"
ir(X, r574) :- in("NDC_MS", X), in("NDC_NC", X).
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_NC", X)} = 0.
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_MS", X)} = 0.

% "NDC_MS" ! "NDC_SC"
ir(X, r575) :- in("NDC_MS", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_MS", X)} = 0.

% "NDC_MS" ! "NDC_TN"
ir(X, r576) :- in("NDC_MS", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_MS", X)} = 0.

% "NDC_MS" ! "NDC_VA"
ir(X, r577) :- in("NDC_MS", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_MS", X)} = 0.

% "NDC_MS" ! "NDC_WV"
ir(X, r578) :- in("NDC_MS", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_MS", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_MS", X)} = 0.

% "NDC_NC" ! "NDC_SC"
ir(X, r579) :- in("NDC_NC", X), in("NDC_SC", X).
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_SC", X)} = 0.
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_NC", X)} = 0.

% "NDC_NC" ! "NDC_TN"
ir(X, r580) :- in("NDC_NC", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_NC", X)} = 0.

% "NDC_NC" ! "NDC_VA"
ir(X, r581) :- in("NDC_NC", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_NC", X)} = 0.

% "NDC_NC" ! "NDC_WV"
ir(X, r582) :- in("NDC_NC", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_NC", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_NC", X)} = 0.

% "NDC_SC" ! "NDC_TN"
ir(X, r583) :- in("NDC_SC", X), in("NDC_TN", X).
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_TN", X)} = 0.
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_SC", X)} = 0.

% "NDC_SC" ! "NDC_VA"
ir(X, r584) :- in("NDC_SC", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_SC", X)} = 0.

% "NDC_SC" ! "NDC_WV"
ir(X, r585) :- in("NDC_SC", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_SC", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_SC", X)} = 0.

% "NDC_TN" ! "NDC_VA"
ir(X, r586) :- in("NDC_TN", X), in("NDC_VA", X).
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_VA", X)} = 0.
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_TN", X)} = 0.

% "NDC_TN" ! "NDC_WV"
ir(X, r587) :- in("NDC_TN", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_TN", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_TN", X)} = 0.

% "NDC_VA" ! "NDC_WV"
ir(X, r588) :- in("NDC_VA", X), in("NDC_WV", X).
:- #count {X : vrs(X), in("NDC_VA", X), out("NDC_WV", X)} = 0.
:- #count {X : vrs(X), in("NDC_WV", X), out("NDC_VA", X)} = 0.

% "NDC_AZ" ! "NDC_NM"
ir(X, r601) :- in("NDC_AZ", X), in("NDC_NM", X).
:- #count {X : vrs(X), in("NDC_AZ", X), out("NDC_NM", X)} = 0.
:- #count {X : vrs(X), in("NDC_NM", X), out("NDC_AZ", X)} = 0.

% "NDC_AZ" ! "NDC_OK"
ir(X, r602) :- in("NDC_AZ", X), in("NDC_OK", X).
:- #count {X : vrs(X), in("NDC_AZ", X), out("NDC_OK", X)} = 0.
:- #count {X : vrs(X), in("NDC_OK", X), out("NDC_AZ", X)} = 0.

% "NDC_AZ" ! "NDC_TX"
ir(X, r603) :- in("NDC_AZ", X), in("NDC_TX", X).
:- #count {X : vrs(X), in("NDC_AZ", X), out("NDC_TX", X)} = 0.
:- #count {X : vrs(X), in("NDC_TX", X), out("NDC_AZ", X)} = 0.

% "NDC_NM" ! "NDC_OK"
ir(X, r604) :- in("NDC_NM", X), in("NDC_OK", X).
:- #count {X : vrs(X), in("NDC_NM", X), out("NDC_OK", X)} = 0.
:- #count {X : vrs(X), in("NDC_OK", X), out("NDC_NM", X)} = 0.

% "NDC_NM" ! "NDC_TX"
ir(X, r605) :- in("NDC_NM", X), in("NDC_TX", X).
:- #count {X : vrs(X), in("NDC_NM", X), out("NDC_TX", X)} = 0.
:- #count {X : vrs(X), in("NDC_TX", X), out("NDC_NM", X)} = 0.

% "NDC_OK" ! "NDC_TX"
ir(X, r606) :- in("NDC_OK", X), in("NDC_TX", X).
:- #count {X : vrs(X), in("NDC_OK", X), out("NDC_TX", X)} = 0.
:- #count {X : vrs(X), in("NDC_TX", X), out("NDC_OK", X)} = 0.

% "NDC_CA" ! "NDC_CO"
ir(X, r611) :- in("NDC_CA", X), in("NDC_CO", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_CO", X)} = 0.
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_ID"
ir(X, r612) :- in("NDC_CA", X), in("NDC_ID", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_ID", X)} = 0.
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_MT"
ir(X, r613) :- in("NDC_CA", X), in("NDC_MT", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_MT", X)} = 0.
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_NV"
ir(X, r614) :- in("NDC_CA", X), in("NDC_NV", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_NV", X)} = 0.
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_OR"
ir(X, r615) :- in("NDC_CA", X), in("NDC_OR", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_OR", X)} = 0.
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_WA"
ir(X, r616) :- in("NDC_CA", X), in("NDC_WA", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_WA", X)} = 0.
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_WY"
ir(X, r617) :- in("NDC_CA", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_CA", X)} = 0.

% "NDC_CA" ! "NDC_UT"
ir(X, r618) :- in("NDC_CA", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_CA", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_CA", X)} = 0.

% "NDC_CO" ! "NDC_ID"
ir(X, r619) :- in("NDC_CO", X), in("NDC_ID", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_ID", X)} = 0.
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_CO", X)} = 0.

% "NDC_CO" ! "NDC_MT"
ir(X, r620) :- in("NDC_CO", X), in("NDC_MT", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_MT", X)} = 0.
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_CO", X)} = 0.

% "NDC_CO" ! "NDC_NV"
ir(X, r621) :- in("NDC_CO", X), in("NDC_NV", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_NV", X)} = 0.
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_CO", X)} = 0.

% "NDC_CO" ! "NDC_OR"
ir(X, r622) :- in("NDC_CO", X), in("NDC_OR", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_OR", X)} = 0.
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_CO", X)} = 0.

% "NDC_CO" ! "NDC_WA"
ir(X, r623) :- in("NDC_CO", X), in("NDC_WA", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_WA", X)} = 0.
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_CO", X)} = 0.

% "NDC_CO" ! "NDC_WY"
ir(X, r624) :- in("NDC_CO", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_CO", X)} = 0.

% "NDC_CO" ! "NDC_UT"
ir(X, r625) :- in("NDC_CO", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_CO", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_CO", X)} = 0.

% "NDC_ID" ! "NDC_MT"
ir(X, r626) :- in("NDC_ID", X), in("NDC_MT", X).
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_MT", X)} = 0.
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_ID", X)} = 0.

% "NDC_ID" ! "NDC_NV"
ir(X, r627) :- in("NDC_ID", X), in("NDC_NV", X).
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_NV", X)} = 0.
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_ID", X)} = 0.

% "NDC_ID" ! "NDC_OR"
ir(X, r628) :- in("NDC_ID", X), in("NDC_OR", X).
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_OR", X)} = 0.
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_ID", X)} = 0.

% "NDC_ID" ! "NDC_WA"
ir(X, r629) :- in("NDC_ID", X), in("NDC_WA", X).
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_WA", X)} = 0.
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_ID", X)} = 0.

% "NDC_ID" ! "NDC_WY"
ir(X, r630) :- in("NDC_ID", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_ID", X)} = 0.

% "NDC_ID" ! "NDC_UT"
ir(X, r631) :- in("NDC_ID", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_ID", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_ID", X)} = 0.

% "NDC_MT" ! "NDC_NV"
ir(X, r632) :- in("NDC_MT", X), in("NDC_NV", X).
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_NV", X)} = 0.
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_MT", X)} = 0.

% "NDC_MT" ! "NDC_OR"
ir(X, r633) :- in("NDC_MT", X), in("NDC_OR", X).
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_OR", X)} = 0.
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_MT", X)} = 0.

% "NDC_MT" ! "NDC_WA"
ir(X, r634) :- in("NDC_MT", X), in("NDC_WA", X).
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_WA", X)} = 0.
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_MT", X)} = 0.

% "NDC_MT" ! "NDC_WY"
ir(X, r635) :- in("NDC_MT", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_MT", X)} = 0.

% "NDC_MT" ! "NDC_UT"
ir(X, r636) :- in("NDC_MT", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_MT", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_MT", X)} = 0.

% "NDC_NV" ! "NDC_OR"
ir(X, r637) :- in("NDC_NV", X), in("NDC_OR", X).
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_OR", X)} = 0.
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_NV", X)} = 0.

% "NDC_NV" ! "NDC_WA"
ir(X, r638) :- in("NDC_NV", X), in("NDC_WA", X).
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_WA", X)} = 0.
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_NV", X)} = 0.

% "NDC_NV" ! "NDC_WY"
ir(X, r639) :- in("NDC_NV", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_NV", X)} = 0.

% "NDC_NV" ! "NDC_UT"
ir(X, r640) :- in("NDC_NV", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_NV", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_NV", X)} = 0.

% "NDC_OR" ! "NDC_WA"
ir(X, r641) :- in("NDC_OR", X), in("NDC_WA", X).
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_WA", X)} = 0.
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_OR", X)} = 0.

% "NDC_OR" ! "NDC_WY"
ir(X, r642) :- in("NDC_OR", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_OR", X)} = 0.

% "NDC_OR" ! "NDC_UT"
ir(X, r643) :- in("NDC_OR", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_OR", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_OR", X)} = 0.

% "NDC_WA" ! "NDC_WY"
ir(X, r644) :- in("NDC_WA", X), in("NDC_WY", X).
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_WY", X)} = 0.
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_WA", X)} = 0.

% "NDC_WA" ! "NDC_UT"
ir(X, r645) :- in("NDC_WA", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_WA", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_WA", X)} = 0.

% "NDC_WY" ! "NDC_UT"
ir(X, r646) :- in("NDC_WY", X), in("NDC_UT", X).
:- #count {X : vrs(X), in("NDC_WY", X), out("NDC_UT", X)} = 0.
:- #count {X : vrs(X), in("NDC_UT", X), out("NDC_WY", X)} = 0.

% Articulations

% "CEN_AL" ['='] "NDC_AL"
:- #count {A : vrs(A), in("CEN_AL", A), out("NDC_AL", A)} > 0,
   #count {B : vrs(B), in("CEN_AL", B), in("NDC_AL", B)} = 0,
   #count {C : vrs(C), out("CEN_AL", C), in("NDC_AL", C)} > 0.
:- #count {A : vrs(A), in("CEN_AL", A), out("NDC_AL", A)} > 0,
   #count {B : vrs(B), in("CEN_AL", B), in("NDC_AL", B)} > 0,
   #count {C : vrs(C), out("CEN_AL", C), in("NDC_AL", C)} > 0.
:- #count {A : vrs(A), in("CEN_AL", A), out("NDC_AL", A)} = 0,
   #count {B : vrs(B), in("CEN_AL", B), in("NDC_AL", B)} > 0,
   #count {C : vrs(C), out("CEN_AL", C), in("NDC_AL", C)} > 0.
:- #count {A : vrs(A), in("CEN_AL", A), out("NDC_AL", A)} > 0,
   #count {B : vrs(B), in("CEN_AL", B), in("NDC_AL", B)} > 0,
   #count {C : vrs(C), out("CEN_AL", C), in("NDC_AL", C)} = 0.
ir(X, r656) :- in("CEN_AL", X), out("NDC_AL", X).
:- #count {X : vrs(X), in("CEN_AL", X), in("NDC_AL", X)} = 0.
ir(X, r656) :- out("CEN_AL", X), in("NDC_AL", X).

% "CEN_AR" ['='] "NDC_AR"
:- #count {A : vrs(A), in("CEN_AR", A), out("NDC_AR", A)} > 0,
   #count {B : vrs(B), in("CEN_AR", B), in("NDC_AR", B)} = 0,
   #count {C : vrs(C), out("CEN_AR", C), in("NDC_AR", C)} > 0.
:- #count {A : vrs(A), in("CEN_AR", A), out("NDC_AR", A)} > 0,
   #count {B : vrs(B), in("CEN_AR", B), in("NDC_AR", B)} > 0,
   #count {C : vrs(C), out("CEN_AR", C), in("NDC_AR", C)} > 0.
:- #count {A : vrs(A), in("CEN_AR", A), out("NDC_AR", A)} = 0,
   #count {B : vrs(B), in("CEN_AR", B), in("NDC_AR", B)} > 0,
   #count {C : vrs(C), out("CEN_AR", C), in("NDC_AR", C)} > 0.
:- #count {A : vrs(A), in("CEN_AR", A), out("NDC_AR", A)} > 0,
   #count {B : vrs(B), in("CEN_AR", B), in("NDC_AR", B)} > 0,
   #count {C : vrs(C), out("CEN_AR", C), in("NDC_AR", C)} = 0.
ir(X, r657) :- in("CEN_AR", X), out("NDC_AR", X).
:- #count {X : vrs(X), in("CEN_AR", X), in("NDC_AR", X)} = 0.
ir(X, r657) :- out("CEN_AR", X), in("NDC_AR", X).

% "CEN_AZ" ['='] "NDC_AZ"
:- #count {A : vrs(A), in("CEN_AZ", A), out("NDC_AZ", A)} > 0,
   #count {B : vrs(B), in("CEN_AZ", B), in("NDC_AZ", B)} = 0,
   #count {C : vrs(C), out("CEN_AZ", C), in("NDC_AZ", C)} > 0.
:- #count {A : vrs(A), in("CEN_AZ", A), out("NDC_AZ", A)} > 0,
   #count {B : vrs(B), in("CEN_AZ", B), in("NDC_AZ", B)} > 0,
   #count {C : vrs(C), out("CEN_AZ", C), in("NDC_AZ", C)} > 0.
:- #count {A : vrs(A), in("CEN_AZ", A), out("NDC_AZ", A)} = 0,
   #count {B : vrs(B), in("CEN_AZ", B), in("NDC_AZ", B)} > 0,
   #count {C : vrs(C), out("CEN_AZ", C), in("NDC_AZ", C)} > 0.
:- #count {A : vrs(A), in("CEN_AZ", A), out("NDC_AZ", A)} > 0,
   #count {B : vrs(B), in("CEN_AZ", B), in("NDC_AZ", B)} > 0,
   #count {C : vrs(C), out("CEN_AZ", C), in("NDC_AZ", C)} = 0.
ir(X, r658) :- in("CEN_AZ", X), out("NDC_AZ", X).
:- #count {X : vrs(X), in("CEN_AZ", X), in("NDC_AZ", X)} = 0.
ir(X, r658) :- out("CEN_AZ", X), in("NDC_AZ", X).

% "CEN_CA" ['='] "NDC_CA"
:- #count {A : vrs(A), in("CEN_CA", A), out("NDC_CA", A)} > 0,
   #count {B : vrs(B), in("CEN_CA", B), in("NDC_CA", B)} = 0,
   #count {C : vrs(C), out("CEN_CA", C), in("NDC_CA", C)} > 0.
:- #count {A : vrs(A), in("CEN_CA", A), out("NDC_CA", A)} > 0,
   #count {B : vrs(B), in("CEN_CA", B), in("NDC_CA", B)} > 0,
   #count {C : vrs(C), out("CEN_CA", C), in("NDC_CA", C)} > 0.
:- #count {A : vrs(A), in("CEN_CA", A), out("NDC_CA", A)} = 0,
   #count {B : vrs(B), in("CEN_CA", B), in("NDC_CA", B)} > 0,
   #count {C : vrs(C), out("CEN_CA", C), in("NDC_CA", C)} > 0.
:- #count {A : vrs(A), in("CEN_CA", A), out("NDC_CA", A)} > 0,
   #count {B : vrs(B), in("CEN_CA", B), in("NDC_CA", B)} > 0,
   #count {C : vrs(C), out("CEN_CA", C), in("NDC_CA", C)} = 0.
ir(X, r659) :- in("CEN_CA", X), out("NDC_CA", X).
:- #count {X : vrs(X), in("CEN_CA", X), in("NDC_CA", X)} = 0.
ir(X, r659) :- out("CEN_CA", X), in("NDC_CA", X).

% "CEN_CO" ['='] "NDC_CO"
:- #count {A : vrs(A), in("CEN_CO", A), out("NDC_CO", A)} > 0,
   #count {B : vrs(B), in("CEN_CO", B), in("NDC_CO", B)} = 0,
   #count {C : vrs(C), out("CEN_CO", C), in("NDC_CO", C)} > 0.
:- #count {A : vrs(A), in("CEN_CO", A), out("NDC_CO", A)} > 0,
   #count {B : vrs(B), in("CEN_CO", B), in("NDC_CO", B)} > 0,
   #count {C : vrs(C), out("CEN_CO", C), in("NDC_CO", C)} > 0.
:- #count {A : vrs(A), in("CEN_CO", A), out("NDC_CO", A)} = 0,
   #count {B : vrs(B), in("CEN_CO", B), in("NDC_CO", B)} > 0,
   #count {C : vrs(C), out("CEN_CO", C), in("NDC_CO", C)} > 0.
:- #count {A : vrs(A), in("CEN_CO", A), out("NDC_CO", A)} > 0,
   #count {B : vrs(B), in("CEN_CO", B), in("NDC_CO", B)} > 0,
   #count {C : vrs(C), out("CEN_CO", C), in("NDC_CO", C)} = 0.
ir(X, r660) :- in("CEN_CO", X), out("NDC_CO", X).
:- #count {X : vrs(X), in("CEN_CO", X), in("NDC_CO", X)} = 0.
ir(X, r660) :- out("CEN_CO", X), in("NDC_CO", X).

% "CEN_CT" ['='] "NDC_CT"
:- #count {A : vrs(A), in("CEN_CT", A), out("NDC_CT", A)} > 0,
   #count {B : vrs(B), in("CEN_CT", B), in("NDC_CT", B)} = 0,
   #count {C : vrs(C), out("CEN_CT", C), in("NDC_CT", C)} > 0.
:- #count {A : vrs(A), in("CEN_CT", A), out("NDC_CT", A)} > 0,
   #count {B : vrs(B), in("CEN_CT", B), in("NDC_CT", B)} > 0,
   #count {C : vrs(C), out("CEN_CT", C), in("NDC_CT", C)} > 0.
:- #count {A : vrs(A), in("CEN_CT", A), out("NDC_CT", A)} = 0,
   #count {B : vrs(B), in("CEN_CT", B), in("NDC_CT", B)} > 0,
   #count {C : vrs(C), out("CEN_CT", C), in("NDC_CT", C)} > 0.
:- #count {A : vrs(A), in("CEN_CT", A), out("NDC_CT", A)} > 0,
   #count {B : vrs(B), in("CEN_CT", B), in("NDC_CT", B)} > 0,
   #count {C : vrs(C), out("CEN_CT", C), in("NDC_CT", C)} = 0.
ir(X, r661) :- in("CEN_CT", X), out("NDC_CT", X).
:- #count {X : vrs(X), in("CEN_CT", X), in("NDC_CT", X)} = 0.
ir(X, r661) :- out("CEN_CT", X), in("NDC_CT", X).

% "CEN_DC" ['='] "NDC_DC"
:- #count {A : vrs(A), in("CEN_DC", A), out("NDC_DC", A)} > 0,
   #count {B : vrs(B), in("CEN_DC", B), in("NDC_DC", B)} = 0,
   #count {C : vrs(C), out("CEN_DC", C), in("NDC_DC", C)} > 0.
:- #count {A : vrs(A), in("CEN_DC", A), out("NDC_DC", A)} > 0,
   #count {B : vrs(B), in("CEN_DC", B), in("NDC_DC", B)} > 0,
   #count {C : vrs(C), out("CEN_DC", C), in("NDC_DC", C)} > 0.
:- #count {A : vrs(A), in("CEN_DC", A), out("NDC_DC", A)} = 0,
   #count {B : vrs(B), in("CEN_DC", B), in("NDC_DC", B)} > 0,
   #count {C : vrs(C), out("CEN_DC", C), in("NDC_DC", C)} > 0.
:- #count {A : vrs(A), in("CEN_DC", A), out("NDC_DC", A)} > 0,
   #count {B : vrs(B), in("CEN_DC", B), in("NDC_DC", B)} > 0,
   #count {C : vrs(C), out("CEN_DC", C), in("NDC_DC", C)} = 0.
ir(X, r662) :- in("CEN_DC", X), out("NDC_DC", X).
:- #count {X : vrs(X), in("CEN_DC", X), in("NDC_DC", X)} = 0.
ir(X, r662) :- out("CEN_DC", X), in("NDC_DC", X).

% "CEN_DE" ['='] "NDC_DE"
:- #count {A : vrs(A), in("CEN_DE", A), out("NDC_DE", A)} > 0,
   #count {B : vrs(B), in("CEN_DE", B), in("NDC_DE", B)} = 0,
   #count {C : vrs(C), out("CEN_DE", C), in("NDC_DE", C)} > 0.
:- #count {A : vrs(A), in("CEN_DE", A), out("NDC_DE", A)} > 0,
   #count {B : vrs(B), in("CEN_DE", B), in("NDC_DE", B)} > 0,
   #count {C : vrs(C), out("CEN_DE", C), in("NDC_DE", C)} > 0.
:- #count {A : vrs(A), in("CEN_DE", A), out("NDC_DE", A)} = 0,
   #count {B : vrs(B), in("CEN_DE", B), in("NDC_DE", B)} > 0,
   #count {C : vrs(C), out("CEN_DE", C), in("NDC_DE", C)} > 0.
:- #count {A : vrs(A), in("CEN_DE", A), out("NDC_DE", A)} > 0,
   #count {B : vrs(B), in("CEN_DE", B), in("NDC_DE", B)} > 0,
   #count {C : vrs(C), out("CEN_DE", C), in("NDC_DE", C)} = 0.
ir(X, r663) :- in("CEN_DE", X), out("NDC_DE", X).
:- #count {X : vrs(X), in("CEN_DE", X), in("NDC_DE", X)} = 0.
ir(X, r663) :- out("CEN_DE", X), in("NDC_DE", X).

% "CEN_FL" ['='] "NDC_FL"
:- #count {A : vrs(A), in("CEN_FL", A), out("NDC_FL", A)} > 0,
   #count {B : vrs(B), in("CEN_FL", B), in("NDC_FL", B)} = 0,
   #count {C : vrs(C), out("CEN_FL", C), in("NDC_FL", C)} > 0.
:- #count {A : vrs(A), in("CEN_FL", A), out("NDC_FL", A)} > 0,
   #count {B : vrs(B), in("CEN_FL", B), in("NDC_FL", B)} > 0,
   #count {C : vrs(C), out("CEN_FL", C), in("NDC_FL", C)} > 0.
:- #count {A : vrs(A), in("CEN_FL", A), out("NDC_FL", A)} = 0,
   #count {B : vrs(B), in("CEN_FL", B), in("NDC_FL", B)} > 0,
   #count {C : vrs(C), out("CEN_FL", C), in("NDC_FL", C)} > 0.
:- #count {A : vrs(A), in("CEN_FL", A), out("NDC_FL", A)} > 0,
   #count {B : vrs(B), in("CEN_FL", B), in("NDC_FL", B)} > 0,
   #count {C : vrs(C), out("CEN_FL", C), in("NDC_FL", C)} = 0.
ir(X, r664) :- in("CEN_FL", X), out("NDC_FL", X).
:- #count {X : vrs(X), in("CEN_FL", X), in("NDC_FL", X)} = 0.
ir(X, r664) :- out("CEN_FL", X), in("NDC_FL", X).

% "CEN_GA" ['='] "NDC_GA"
:- #count {A : vrs(A), in("CEN_GA", A), out("NDC_GA", A)} > 0,
   #count {B : vrs(B), in("CEN_GA", B), in("NDC_GA", B)} = 0,
   #count {C : vrs(C), out("CEN_GA", C), in("NDC_GA", C)} > 0.
:- #count {A : vrs(A), in("CEN_GA", A), out("NDC_GA", A)} > 0,
   #count {B : vrs(B), in("CEN_GA", B), in("NDC_GA", B)} > 0,
   #count {C : vrs(C), out("CEN_GA", C), in("NDC_GA", C)} > 0.
:- #count {A : vrs(A), in("CEN_GA", A), out("NDC_GA", A)} = 0,
   #count {B : vrs(B), in("CEN_GA", B), in("NDC_GA", B)} > 0,
   #count {C : vrs(C), out("CEN_GA", C), in("NDC_GA", C)} > 0.
:- #count {A : vrs(A), in("CEN_GA", A), out("NDC_GA", A)} > 0,
   #count {B : vrs(B), in("CEN_GA", B), in("NDC_GA", B)} > 0,
   #count {C : vrs(C), out("CEN_GA", C), in("NDC_GA", C)} = 0.
ir(X, r665) :- in("CEN_GA", X), out("NDC_GA", X).
:- #count {X : vrs(X), in("CEN_GA", X), in("NDC_GA", X)} = 0.
ir(X, r665) :- out("CEN_GA", X), in("NDC_GA", X).

% "CEN_IA" ['='] "NDC_IA"
:- #count {A : vrs(A), in("CEN_IA", A), out("NDC_IA", A)} > 0,
   #count {B : vrs(B), in("CEN_IA", B), in("NDC_IA", B)} = 0,
   #count {C : vrs(C), out("CEN_IA", C), in("NDC_IA", C)} > 0.
:- #count {A : vrs(A), in("CEN_IA", A), out("NDC_IA", A)} > 0,
   #count {B : vrs(B), in("CEN_IA", B), in("NDC_IA", B)} > 0,
   #count {C : vrs(C), out("CEN_IA", C), in("NDC_IA", C)} > 0.
:- #count {A : vrs(A), in("CEN_IA", A), out("NDC_IA", A)} = 0,
   #count {B : vrs(B), in("CEN_IA", B), in("NDC_IA", B)} > 0,
   #count {C : vrs(C), out("CEN_IA", C), in("NDC_IA", C)} > 0.
:- #count {A : vrs(A), in("CEN_IA", A), out("NDC_IA", A)} > 0,
   #count {B : vrs(B), in("CEN_IA", B), in("NDC_IA", B)} > 0,
   #count {C : vrs(C), out("CEN_IA", C), in("NDC_IA", C)} = 0.
ir(X, r666) :- in("CEN_IA", X), out("NDC_IA", X).
:- #count {X : vrs(X), in("CEN_IA", X), in("NDC_IA", X)} = 0.
ir(X, r666) :- out("CEN_IA", X), in("NDC_IA", X).

% "CEN_ID" ['='] "NDC_ID"
:- #count {A : vrs(A), in("CEN_ID", A), out("NDC_ID", A)} > 0,
   #count {B : vrs(B), in("CEN_ID", B), in("NDC_ID", B)} = 0,
   #count {C : vrs(C), out("CEN_ID", C), in("NDC_ID", C)} > 0.
:- #count {A : vrs(A), in("CEN_ID", A), out("NDC_ID", A)} > 0,
   #count {B : vrs(B), in("CEN_ID", B), in("NDC_ID", B)} > 0,
   #count {C : vrs(C), out("CEN_ID", C), in("NDC_ID", C)} > 0.
:- #count {A : vrs(A), in("CEN_ID", A), out("NDC_ID", A)} = 0,
   #count {B : vrs(B), in("CEN_ID", B), in("NDC_ID", B)} > 0,
   #count {C : vrs(C), out("CEN_ID", C), in("NDC_ID", C)} > 0.
:- #count {A : vrs(A), in("CEN_ID", A), out("NDC_ID", A)} > 0,
   #count {B : vrs(B), in("CEN_ID", B), in("NDC_ID", B)} > 0,
   #count {C : vrs(C), out("CEN_ID", C), in("NDC_ID", C)} = 0.
ir(X, r667) :- in("CEN_ID", X), out("NDC_ID", X).
:- #count {X : vrs(X), in("CEN_ID", X), in("NDC_ID", X)} = 0.
ir(X, r667) :- out("CEN_ID", X), in("NDC_ID", X).

% "CEN_IL" ['='] "NDC_IL"
:- #count {A : vrs(A), in("CEN_IL", A), out("NDC_IL", A)} > 0,
   #count {B : vrs(B), in("CEN_IL", B), in("NDC_IL", B)} = 0,
   #count {C : vrs(C), out("CEN_IL", C), in("NDC_IL", C)} > 0.
:- #count {A : vrs(A), in("CEN_IL", A), out("NDC_IL", A)} > 0,
   #count {B : vrs(B), in("CEN_IL", B), in("NDC_IL", B)} > 0,
   #count {C : vrs(C), out("CEN_IL", C), in("NDC_IL", C)} > 0.
:- #count {A : vrs(A), in("CEN_IL", A), out("NDC_IL", A)} = 0,
   #count {B : vrs(B), in("CEN_IL", B), in("NDC_IL", B)} > 0,
   #count {C : vrs(C), out("CEN_IL", C), in("NDC_IL", C)} > 0.
:- #count {A : vrs(A), in("CEN_IL", A), out("NDC_IL", A)} > 0,
   #count {B : vrs(B), in("CEN_IL", B), in("NDC_IL", B)} > 0,
   #count {C : vrs(C), out("CEN_IL", C), in("NDC_IL", C)} = 0.
ir(X, r668) :- in("CEN_IL", X), out("NDC_IL", X).
:- #count {X : vrs(X), in("CEN_IL", X), in("NDC_IL", X)} = 0.
ir(X, r668) :- out("CEN_IL", X), in("NDC_IL", X).

% "CEN_IN" ['='] "NDC_IN"
:- #count {A : vrs(A), in("CEN_IN", A), out("NDC_IN", A)} > 0,
   #count {B : vrs(B), in("CEN_IN", B), in("NDC_IN", B)} = 0,
   #count {C : vrs(C), out("CEN_IN", C), in("NDC_IN", C)} > 0.
:- #count {A : vrs(A), in("CEN_IN", A), out("NDC_IN", A)} > 0,
   #count {B : vrs(B), in("CEN_IN", B), in("NDC_IN", B)} > 0,
   #count {C : vrs(C), out("CEN_IN", C), in("NDC_IN", C)} > 0.
:- #count {A : vrs(A), in("CEN_IN", A), out("NDC_IN", A)} = 0,
   #count {B : vrs(B), in("CEN_IN", B), in("NDC_IN", B)} > 0,
   #count {C : vrs(C), out("CEN_IN", C), in("NDC_IN", C)} > 0.
:- #count {A : vrs(A), in("CEN_IN", A), out("NDC_IN", A)} > 0,
   #count {B : vrs(B), in("CEN_IN", B), in("NDC_IN", B)} > 0,
   #count {C : vrs(C), out("CEN_IN", C), in("NDC_IN", C)} = 0.
ir(X, r669) :- in("CEN_IN", X), out("NDC_IN", X).
:- #count {X : vrs(X), in("CEN_IN", X), in("NDC_IN", X)} = 0.
ir(X, r669) :- out("CEN_IN", X), in("NDC_IN", X).

% "CEN_KS" ['='] "NDC_KS"
:- #count {A : vrs(A), in("CEN_KS", A), out("NDC_KS", A)} > 0,
   #count {B : vrs(B), in("CEN_KS", B), in("NDC_KS", B)} = 0,
   #count {C : vrs(C), out("CEN_KS", C), in("NDC_KS", C)} > 0.
:- #count {A : vrs(A), in("CEN_KS", A), out("NDC_KS", A)} > 0,
   #count {B : vrs(B), in("CEN_KS", B), in("NDC_KS", B)} > 0,
   #count {C : vrs(C), out("CEN_KS", C), in("NDC_KS", C)} > 0.
:- #count {A : vrs(A), in("CEN_KS", A), out("NDC_KS", A)} = 0,
   #count {B : vrs(B), in("CEN_KS", B), in("NDC_KS", B)} > 0,
   #count {C : vrs(C), out("CEN_KS", C), in("NDC_KS", C)} > 0.
:- #count {A : vrs(A), in("CEN_KS", A), out("NDC_KS", A)} > 0,
   #count {B : vrs(B), in("CEN_KS", B), in("NDC_KS", B)} > 0,
   #count {C : vrs(C), out("CEN_KS", C), in("NDC_KS", C)} = 0.
ir(X, r670) :- in("CEN_KS", X), out("NDC_KS", X).
:- #count {X : vrs(X), in("CEN_KS", X), in("NDC_KS", X)} = 0.
ir(X, r670) :- out("CEN_KS", X), in("NDC_KS", X).

% "CEN_KY" ['='] "NDC_KY"
:- #count {A : vrs(A), in("CEN_KY", A), out("NDC_KY", A)} > 0,
   #count {B : vrs(B), in("CEN_KY", B), in("NDC_KY", B)} = 0,
   #count {C : vrs(C), out("CEN_KY", C), in("NDC_KY", C)} > 0.
:- #count {A : vrs(A), in("CEN_KY", A), out("NDC_KY", A)} > 0,
   #count {B : vrs(B), in("CEN_KY", B), in("NDC_KY", B)} > 0,
   #count {C : vrs(C), out("CEN_KY", C), in("NDC_KY", C)} > 0.
:- #count {A : vrs(A), in("CEN_KY", A), out("NDC_KY", A)} = 0,
   #count {B : vrs(B), in("CEN_KY", B), in("NDC_KY", B)} > 0,
   #count {C : vrs(C), out("CEN_KY", C), in("NDC_KY", C)} > 0.
:- #count {A : vrs(A), in("CEN_KY", A), out("NDC_KY", A)} > 0,
   #count {B : vrs(B), in("CEN_KY", B), in("NDC_KY", B)} > 0,
   #count {C : vrs(C), out("CEN_KY", C), in("NDC_KY", C)} = 0.
ir(X, r671) :- in("CEN_KY", X), out("NDC_KY", X).
:- #count {X : vrs(X), in("CEN_KY", X), in("NDC_KY", X)} = 0.
ir(X, r671) :- out("CEN_KY", X), in("NDC_KY", X).

% "CEN_LA" ['='] "NDC_LA"
:- #count {A : vrs(A), in("CEN_LA", A), out("NDC_LA", A)} > 0,
   #count {B : vrs(B), in("CEN_LA", B), in("NDC_LA", B)} = 0,
   #count {C : vrs(C), out("CEN_LA", C), in("NDC_LA", C)} > 0.
:- #count {A : vrs(A), in("CEN_LA", A), out("NDC_LA", A)} > 0,
   #count {B : vrs(B), in("CEN_LA", B), in("NDC_LA", B)} > 0,
   #count {C : vrs(C), out("CEN_LA", C), in("NDC_LA", C)} > 0.
:- #count {A : vrs(A), in("CEN_LA", A), out("NDC_LA", A)} = 0,
   #count {B : vrs(B), in("CEN_LA", B), in("NDC_LA", B)} > 0,
   #count {C : vrs(C), out("CEN_LA", C), in("NDC_LA", C)} > 0.
:- #count {A : vrs(A), in("CEN_LA", A), out("NDC_LA", A)} > 0,
   #count {B : vrs(B), in("CEN_LA", B), in("NDC_LA", B)} > 0,
   #count {C : vrs(C), out("CEN_LA", C), in("NDC_LA", C)} = 0.
ir(X, r672) :- in("CEN_LA", X), out("NDC_LA", X).
:- #count {X : vrs(X), in("CEN_LA", X), in("NDC_LA", X)} = 0.
ir(X, r672) :- out("CEN_LA", X), in("NDC_LA", X).

% "CEN_MA" ['='] "NDC_MA"
:- #count {A : vrs(A), in("CEN_MA", A), out("NDC_MA", A)} > 0,
   #count {B : vrs(B), in("CEN_MA", B), in("NDC_MA", B)} = 0,
   #count {C : vrs(C), out("CEN_MA", C), in("NDC_MA", C)} > 0.
:- #count {A : vrs(A), in("CEN_MA", A), out("NDC_MA", A)} > 0,
   #count {B : vrs(B), in("CEN_MA", B), in("NDC_MA", B)} > 0,
   #count {C : vrs(C), out("CEN_MA", C), in("NDC_MA", C)} > 0.
:- #count {A : vrs(A), in("CEN_MA", A), out("NDC_MA", A)} = 0,
   #count {B : vrs(B), in("CEN_MA", B), in("NDC_MA", B)} > 0,
   #count {C : vrs(C), out("CEN_MA", C), in("NDC_MA", C)} > 0.
:- #count {A : vrs(A), in("CEN_MA", A), out("NDC_MA", A)} > 0,
   #count {B : vrs(B), in("CEN_MA", B), in("NDC_MA", B)} > 0,
   #count {C : vrs(C), out("CEN_MA", C), in("NDC_MA", C)} = 0.
ir(X, r673) :- in("CEN_MA", X), out("NDC_MA", X).
:- #count {X : vrs(X), in("CEN_MA", X), in("NDC_MA", X)} = 0.
ir(X, r673) :- out("CEN_MA", X), in("NDC_MA", X).

% "CEN_MD" ['='] "NDC_MD"
:- #count {A : vrs(A), in("CEN_MD", A), out("NDC_MD", A)} > 0,
   #count {B : vrs(B), in("CEN_MD", B), in("NDC_MD", B)} = 0,
   #count {C : vrs(C), out("CEN_MD", C), in("NDC_MD", C)} > 0.
:- #count {A : vrs(A), in("CEN_MD", A), out("NDC_MD", A)} > 0,
   #count {B : vrs(B), in("CEN_MD", B), in("NDC_MD", B)} > 0,
   #count {C : vrs(C), out("CEN_MD", C), in("NDC_MD", C)} > 0.
:- #count {A : vrs(A), in("CEN_MD", A), out("NDC_MD", A)} = 0,
   #count {B : vrs(B), in("CEN_MD", B), in("NDC_MD", B)} > 0,
   #count {C : vrs(C), out("CEN_MD", C), in("NDC_MD", C)} > 0.
:- #count {A : vrs(A), in("CEN_MD", A), out("NDC_MD", A)} > 0,
   #count {B : vrs(B), in("CEN_MD", B), in("NDC_MD", B)} > 0,
   #count {C : vrs(C), out("CEN_MD", C), in("NDC_MD", C)} = 0.
ir(X, r674) :- in("CEN_MD", X), out("NDC_MD", X).
:- #count {X : vrs(X), in("CEN_MD", X), in("NDC_MD", X)} = 0.
ir(X, r674) :- out("CEN_MD", X), in("NDC_MD", X).

% "CEN_ME" ['='] "NDC_ME"
:- #count {A : vrs(A), in("CEN_ME", A), out("NDC_ME", A)} > 0,
   #count {B : vrs(B), in("CEN_ME", B), in("NDC_ME", B)} = 0,
   #count {C : vrs(C), out("CEN_ME", C), in("NDC_ME", C)} > 0.
:- #count {A : vrs(A), in("CEN_ME", A), out("NDC_ME", A)} > 0,
   #count {B : vrs(B), in("CEN_ME", B), in("NDC_ME", B)} > 0,
   #count {C : vrs(C), out("CEN_ME", C), in("NDC_ME", C)} > 0.
:- #count {A : vrs(A), in("CEN_ME", A), out("NDC_ME", A)} = 0,
   #count {B : vrs(B), in("CEN_ME", B), in("NDC_ME", B)} > 0,
   #count {C : vrs(C), out("CEN_ME", C), in("NDC_ME", C)} > 0.
:- #count {A : vrs(A), in("CEN_ME", A), out("NDC_ME", A)} > 0,
   #count {B : vrs(B), in("CEN_ME", B), in("NDC_ME", B)} > 0,
   #count {C : vrs(C), out("CEN_ME", C), in("NDC_ME", C)} = 0.
ir(X, r675) :- in("CEN_ME", X), out("NDC_ME", X).
:- #count {X : vrs(X), in("CEN_ME", X), in("NDC_ME", X)} = 0.
ir(X, r675) :- out("CEN_ME", X), in("NDC_ME", X).

% "CEN_MI" ['='] "NDC_MI"
:- #count {A : vrs(A), in("CEN_MI", A), out("NDC_MI", A)} > 0,
   #count {B : vrs(B), in("CEN_MI", B), in("NDC_MI", B)} = 0,
   #count {C : vrs(C), out("CEN_MI", C), in("NDC_MI", C)} > 0.
:- #count {A : vrs(A), in("CEN_MI", A), out("NDC_MI", A)} > 0,
   #count {B : vrs(B), in("CEN_MI", B), in("NDC_MI", B)} > 0,
   #count {C : vrs(C), out("CEN_MI", C), in("NDC_MI", C)} > 0.
:- #count {A : vrs(A), in("CEN_MI", A), out("NDC_MI", A)} = 0,
   #count {B : vrs(B), in("CEN_MI", B), in("NDC_MI", B)} > 0,
   #count {C : vrs(C), out("CEN_MI", C), in("NDC_MI", C)} > 0.
:- #count {A : vrs(A), in("CEN_MI", A), out("NDC_MI", A)} > 0,
   #count {B : vrs(B), in("CEN_MI", B), in("NDC_MI", B)} > 0,
   #count {C : vrs(C), out("CEN_MI", C), in("NDC_MI", C)} = 0.
ir(X, r676) :- in("CEN_MI", X), out("NDC_MI", X).
:- #count {X : vrs(X), in("CEN_MI", X), in("NDC_MI", X)} = 0.
ir(X, r676) :- out("CEN_MI", X), in("NDC_MI", X).

% "CEN_MN" ['='] "NDC_MN"
:- #count {A : vrs(A), in("CEN_MN", A), out("NDC_MN", A)} > 0,
   #count {B : vrs(B), in("CEN_MN", B), in("NDC_MN", B)} = 0,
   #count {C : vrs(C), out("CEN_MN", C), in("NDC_MN", C)} > 0.
:- #count {A : vrs(A), in("CEN_MN", A), out("NDC_MN", A)} > 0,
   #count {B : vrs(B), in("CEN_MN", B), in("NDC_MN", B)} > 0,
   #count {C : vrs(C), out("CEN_MN", C), in("NDC_MN", C)} > 0.
:- #count {A : vrs(A), in("CEN_MN", A), out("NDC_MN", A)} = 0,
   #count {B : vrs(B), in("CEN_MN", B), in("NDC_MN", B)} > 0,
   #count {C : vrs(C), out("CEN_MN", C), in("NDC_MN", C)} > 0.
:- #count {A : vrs(A), in("CEN_MN", A), out("NDC_MN", A)} > 0,
   #count {B : vrs(B), in("CEN_MN", B), in("NDC_MN", B)} > 0,
   #count {C : vrs(C), out("CEN_MN", C), in("NDC_MN", C)} = 0.
ir(X, r677) :- in("CEN_MN", X), out("NDC_MN", X).
:- #count {X : vrs(X), in("CEN_MN", X), in("NDC_MN", X)} = 0.
ir(X, r677) :- out("CEN_MN", X), in("NDC_MN", X).

% "CEN_MO" ['='] "NDC_MO"
:- #count {A : vrs(A), in("CEN_MO", A), out("NDC_MO", A)} > 0,
   #count {B : vrs(B), in("CEN_MO", B), in("NDC_MO", B)} = 0,
   #count {C : vrs(C), out("CEN_MO", C), in("NDC_MO", C)} > 0.
:- #count {A : vrs(A), in("CEN_MO", A), out("NDC_MO", A)} > 0,
   #count {B : vrs(B), in("CEN_MO", B), in("NDC_MO", B)} > 0,
   #count {C : vrs(C), out("CEN_MO", C), in("NDC_MO", C)} > 0.
:- #count {A : vrs(A), in("CEN_MO", A), out("NDC_MO", A)} = 0,
   #count {B : vrs(B), in("CEN_MO", B), in("NDC_MO", B)} > 0,
   #count {C : vrs(C), out("CEN_MO", C), in("NDC_MO", C)} > 0.
:- #count {A : vrs(A), in("CEN_MO", A), out("NDC_MO", A)} > 0,
   #count {B : vrs(B), in("CEN_MO", B), in("NDC_MO", B)} > 0,
   #count {C : vrs(C), out("CEN_MO", C), in("NDC_MO", C)} = 0.
ir(X, r678) :- in("CEN_MO", X), out("NDC_MO", X).
:- #count {X : vrs(X), in("CEN_MO", X), in("NDC_MO", X)} = 0.
ir(X, r678) :- out("CEN_MO", X), in("NDC_MO", X).

% "CEN_MS" ['='] "NDC_MS"
:- #count {A : vrs(A), in("CEN_MS", A), out("NDC_MS", A)} > 0,
   #count {B : vrs(B), in("CEN_MS", B), in("NDC_MS", B)} = 0,
   #count {C : vrs(C), out("CEN_MS", C), in("NDC_MS", C)} > 0.
:- #count {A : vrs(A), in("CEN_MS", A), out("NDC_MS", A)} > 0,
   #count {B : vrs(B), in("CEN_MS", B), in("NDC_MS", B)} > 0,
   #count {C : vrs(C), out("CEN_MS", C), in("NDC_MS", C)} > 0.
:- #count {A : vrs(A), in("CEN_MS", A), out("NDC_MS", A)} = 0,
   #count {B : vrs(B), in("CEN_MS", B), in("NDC_MS", B)} > 0,
   #count {C : vrs(C), out("CEN_MS", C), in("NDC_MS", C)} > 0.
:- #count {A : vrs(A), in("CEN_MS", A), out("NDC_MS", A)} > 0,
   #count {B : vrs(B), in("CEN_MS", B), in("NDC_MS", B)} > 0,
   #count {C : vrs(C), out("CEN_MS", C), in("NDC_MS", C)} = 0.
ir(X, r679) :- in("CEN_MS", X), out("NDC_MS", X).
:- #count {X : vrs(X), in("CEN_MS", X), in("NDC_MS", X)} = 0.
ir(X, r679) :- out("CEN_MS", X), in("NDC_MS", X).

% "CEN_MT" ['='] "NDC_MT"
:- #count {A : vrs(A), in("CEN_MT", A), out("NDC_MT", A)} > 0,
   #count {B : vrs(B), in("CEN_MT", B), in("NDC_MT", B)} = 0,
   #count {C : vrs(C), out("CEN_MT", C), in("NDC_MT", C)} > 0.
:- #count {A : vrs(A), in("CEN_MT", A), out("NDC_MT", A)} > 0,
   #count {B : vrs(B), in("CEN_MT", B), in("NDC_MT", B)} > 0,
   #count {C : vrs(C), out("CEN_MT", C), in("NDC_MT", C)} > 0.
:- #count {A : vrs(A), in("CEN_MT", A), out("NDC_MT", A)} = 0,
   #count {B : vrs(B), in("CEN_MT", B), in("NDC_MT", B)} > 0,
   #count {C : vrs(C), out("CEN_MT", C), in("NDC_MT", C)} > 0.
:- #count {A : vrs(A), in("CEN_MT", A), out("NDC_MT", A)} > 0,
   #count {B : vrs(B), in("CEN_MT", B), in("NDC_MT", B)} > 0,
   #count {C : vrs(C), out("CEN_MT", C), in("NDC_MT", C)} = 0.
ir(X, r680) :- in("CEN_MT", X), out("NDC_MT", X).
:- #count {X : vrs(X), in("CEN_MT", X), in("NDC_MT", X)} = 0.
ir(X, r680) :- out("CEN_MT", X), in("NDC_MT", X).

% "CEN_NC" ['='] "NDC_NC"
:- #count {A : vrs(A), in("CEN_NC", A), out("NDC_NC", A)} > 0,
   #count {B : vrs(B), in("CEN_NC", B), in("NDC_NC", B)} = 0,
   #count {C : vrs(C), out("CEN_NC", C), in("NDC_NC", C)} > 0.
:- #count {A : vrs(A), in("CEN_NC", A), out("NDC_NC", A)} > 0,
   #count {B : vrs(B), in("CEN_NC", B), in("NDC_NC", B)} > 0,
   #count {C : vrs(C), out("CEN_NC", C), in("NDC_NC", C)} > 0.
:- #count {A : vrs(A), in("CEN_NC", A), out("NDC_NC", A)} = 0,
   #count {B : vrs(B), in("CEN_NC", B), in("NDC_NC", B)} > 0,
   #count {C : vrs(C), out("CEN_NC", C), in("NDC_NC", C)} > 0.
:- #count {A : vrs(A), in("CEN_NC", A), out("NDC_NC", A)} > 0,
   #count {B : vrs(B), in("CEN_NC", B), in("NDC_NC", B)} > 0,
   #count {C : vrs(C), out("CEN_NC", C), in("NDC_NC", C)} = 0.
ir(X, r681) :- in("CEN_NC", X), out("NDC_NC", X).
:- #count {X : vrs(X), in("CEN_NC", X), in("NDC_NC", X)} = 0.
ir(X, r681) :- out("CEN_NC", X), in("NDC_NC", X).

% "CEN_ND" ['='] "NDC_ND"
:- #count {A : vrs(A), in("CEN_ND", A), out("NDC_ND", A)} > 0,
   #count {B : vrs(B), in("CEN_ND", B), in("NDC_ND", B)} = 0,
   #count {C : vrs(C), out("CEN_ND", C), in("NDC_ND", C)} > 0.
:- #count {A : vrs(A), in("CEN_ND", A), out("NDC_ND", A)} > 0,
   #count {B : vrs(B), in("CEN_ND", B), in("NDC_ND", B)} > 0,
   #count {C : vrs(C), out("CEN_ND", C), in("NDC_ND", C)} > 0.
:- #count {A : vrs(A), in("CEN_ND", A), out("NDC_ND", A)} = 0,
   #count {B : vrs(B), in("CEN_ND", B), in("NDC_ND", B)} > 0,
   #count {C : vrs(C), out("CEN_ND", C), in("NDC_ND", C)} > 0.
:- #count {A : vrs(A), in("CEN_ND", A), out("NDC_ND", A)} > 0,
   #count {B : vrs(B), in("CEN_ND", B), in("NDC_ND", B)} > 0,
   #count {C : vrs(C), out("CEN_ND", C), in("NDC_ND", C)} = 0.
ir(X, r682) :- in("CEN_ND", X), out("NDC_ND", X).
:- #count {X : vrs(X), in("CEN_ND", X), in("NDC_ND", X)} = 0.
ir(X, r682) :- out("CEN_ND", X), in("NDC_ND", X).

% "CEN_NE" ['='] "NDC_NE"
:- #count {A : vrs(A), in("CEN_NE", A), out("NDC_NE", A)} > 0,
   #count {B : vrs(B), in("CEN_NE", B), in("NDC_NE", B)} = 0,
   #count {C : vrs(C), out("CEN_NE", C), in("NDC_NE", C)} > 0.
:- #count {A : vrs(A), in("CEN_NE", A), out("NDC_NE", A)} > 0,
   #count {B : vrs(B), in("CEN_NE", B), in("NDC_NE", B)} > 0,
   #count {C : vrs(C), out("CEN_NE", C), in("NDC_NE", C)} > 0.
:- #count {A : vrs(A), in("CEN_NE", A), out("NDC_NE", A)} = 0,
   #count {B : vrs(B), in("CEN_NE", B), in("NDC_NE", B)} > 0,
   #count {C : vrs(C), out("CEN_NE", C), in("NDC_NE", C)} > 0.
:- #count {A : vrs(A), in("CEN_NE", A), out("NDC_NE", A)} > 0,
   #count {B : vrs(B), in("CEN_NE", B), in("NDC_NE", B)} > 0,
   #count {C : vrs(C), out("CEN_NE", C), in("NDC_NE", C)} = 0.
ir(X, r683) :- in("CEN_NE", X), out("NDC_NE", X).
:- #count {X : vrs(X), in("CEN_NE", X), in("NDC_NE", X)} = 0.
ir(X, r683) :- out("CEN_NE", X), in("NDC_NE", X).

% "CEN_NH" ['='] "NDC_NH"
:- #count {A : vrs(A), in("CEN_NH", A), out("NDC_NH", A)} > 0,
   #count {B : vrs(B), in("CEN_NH", B), in("NDC_NH", B)} = 0,
   #count {C : vrs(C), out("CEN_NH", C), in("NDC_NH", C)} > 0.
:- #count {A : vrs(A), in("CEN_NH", A), out("NDC_NH", A)} > 0,
   #count {B : vrs(B), in("CEN_NH", B), in("NDC_NH", B)} > 0,
   #count {C : vrs(C), out("CEN_NH", C), in("NDC_NH", C)} > 0.
:- #count {A : vrs(A), in("CEN_NH", A), out("NDC_NH", A)} = 0,
   #count {B : vrs(B), in("CEN_NH", B), in("NDC_NH", B)} > 0,
   #count {C : vrs(C), out("CEN_NH", C), in("NDC_NH", C)} > 0.
:- #count {A : vrs(A), in("CEN_NH", A), out("NDC_NH", A)} > 0,
   #count {B : vrs(B), in("CEN_NH", B), in("NDC_NH", B)} > 0,
   #count {C : vrs(C), out("CEN_NH", C), in("NDC_NH", C)} = 0.
ir(X, r684) :- in("CEN_NH", X), out("NDC_NH", X).
:- #count {X : vrs(X), in("CEN_NH", X), in("NDC_NH", X)} = 0.
ir(X, r684) :- out("CEN_NH", X), in("NDC_NH", X).

% "CEN_NJ" ['='] "NDC_NJ"
:- #count {A : vrs(A), in("CEN_NJ", A), out("NDC_NJ", A)} > 0,
   #count {B : vrs(B), in("CEN_NJ", B), in("NDC_NJ", B)} = 0,
   #count {C : vrs(C), out("CEN_NJ", C), in("NDC_NJ", C)} > 0.
:- #count {A : vrs(A), in("CEN_NJ", A), out("NDC_NJ", A)} > 0,
   #count {B : vrs(B), in("CEN_NJ", B), in("NDC_NJ", B)} > 0,
   #count {C : vrs(C), out("CEN_NJ", C), in("NDC_NJ", C)} > 0.
:- #count {A : vrs(A), in("CEN_NJ", A), out("NDC_NJ", A)} = 0,
   #count {B : vrs(B), in("CEN_NJ", B), in("NDC_NJ", B)} > 0,
   #count {C : vrs(C), out("CEN_NJ", C), in("NDC_NJ", C)} > 0.
:- #count {A : vrs(A), in("CEN_NJ", A), out("NDC_NJ", A)} > 0,
   #count {B : vrs(B), in("CEN_NJ", B), in("NDC_NJ", B)} > 0,
   #count {C : vrs(C), out("CEN_NJ", C), in("NDC_NJ", C)} = 0.
ir(X, r685) :- in("CEN_NJ", X), out("NDC_NJ", X).
:- #count {X : vrs(X), in("CEN_NJ", X), in("NDC_NJ", X)} = 0.
ir(X, r685) :- out("CEN_NJ", X), in("NDC_NJ", X).

% "CEN_NM" ['='] "NDC_NM"
:- #count {A : vrs(A), in("CEN_NM", A), out("NDC_NM", A)} > 0,
   #count {B : vrs(B), in("CEN_NM", B), in("NDC_NM", B)} = 0,
   #count {C : vrs(C), out("CEN_NM", C), in("NDC_NM", C)} > 0.
:- #count {A : vrs(A), in("CEN_NM", A), out("NDC_NM", A)} > 0,
   #count {B : vrs(B), in("CEN_NM", B), in("NDC_NM", B)} > 0,
   #count {C : vrs(C), out("CEN_NM", C), in("NDC_NM", C)} > 0.
:- #count {A : vrs(A), in("CEN_NM", A), out("NDC_NM", A)} = 0,
   #count {B : vrs(B), in("CEN_NM", B), in("NDC_NM", B)} > 0,
   #count {C : vrs(C), out("CEN_NM", C), in("NDC_NM", C)} > 0.
:- #count {A : vrs(A), in("CEN_NM", A), out("NDC_NM", A)} > 0,
   #count {B : vrs(B), in("CEN_NM", B), in("NDC_NM", B)} > 0,
   #count {C : vrs(C), out("CEN_NM", C), in("NDC_NM", C)} = 0.
ir(X, r686) :- in("CEN_NM", X), out("NDC_NM", X).
:- #count {X : vrs(X), in("CEN_NM", X), in("NDC_NM", X)} = 0.
ir(X, r686) :- out("CEN_NM", X), in("NDC_NM", X).

% "CEN_NV" ['='] "NDC_NV"
:- #count {A : vrs(A), in("CEN_NV", A), out("NDC_NV", A)} > 0,
   #count {B : vrs(B), in("CEN_NV", B), in("NDC_NV", B)} = 0,
   #count {C : vrs(C), out("CEN_NV", C), in("NDC_NV", C)} > 0.
:- #count {A : vrs(A), in("CEN_NV", A), out("NDC_NV", A)} > 0,
   #count {B : vrs(B), in("CEN_NV", B), in("NDC_NV", B)} > 0,
   #count {C : vrs(C), out("CEN_NV", C), in("NDC_NV", C)} > 0.
:- #count {A : vrs(A), in("CEN_NV", A), out("NDC_NV", A)} = 0,
   #count {B : vrs(B), in("CEN_NV", B), in("NDC_NV", B)} > 0,
   #count {C : vrs(C), out("CEN_NV", C), in("NDC_NV", C)} > 0.
:- #count {A : vrs(A), in("CEN_NV", A), out("NDC_NV", A)} > 0,
   #count {B : vrs(B), in("CEN_NV", B), in("NDC_NV", B)} > 0,
   #count {C : vrs(C), out("CEN_NV", C), in("NDC_NV", C)} = 0.
ir(X, r687) :- in("CEN_NV", X), out("NDC_NV", X).
:- #count {X : vrs(X), in("CEN_NV", X), in("NDC_NV", X)} = 0.
ir(X, r687) :- out("CEN_NV", X), in("NDC_NV", X).

% "CEN_NY" ['='] "NDC_NY"
:- #count {A : vrs(A), in("CEN_NY", A), out("NDC_NY", A)} > 0,
   #count {B : vrs(B), in("CEN_NY", B), in("NDC_NY", B)} = 0,
   #count {C : vrs(C), out("CEN_NY", C), in("NDC_NY", C)} > 0.
:- #count {A : vrs(A), in("CEN_NY", A), out("NDC_NY", A)} > 0,
   #count {B : vrs(B), in("CEN_NY", B), in("NDC_NY", B)} > 0,
   #count {C : vrs(C), out("CEN_NY", C), in("NDC_NY", C)} > 0.
:- #count {A : vrs(A), in("CEN_NY", A), out("NDC_NY", A)} = 0,
   #count {B : vrs(B), in("CEN_NY", B), in("NDC_NY", B)} > 0,
   #count {C : vrs(C), out("CEN_NY", C), in("NDC_NY", C)} > 0.
:- #count {A : vrs(A), in("CEN_NY", A), out("NDC_NY", A)} > 0,
   #count {B : vrs(B), in("CEN_NY", B), in("NDC_NY", B)} > 0,
   #count {C : vrs(C), out("CEN_NY", C), in("NDC_NY", C)} = 0.
ir(X, r688) :- in("CEN_NY", X), out("NDC_NY", X).
:- #count {X : vrs(X), in("CEN_NY", X), in("NDC_NY", X)} = 0.
ir(X, r688) :- out("CEN_NY", X), in("NDC_NY", X).

% "CEN_OH" ['='] "NDC_OH"
:- #count {A : vrs(A), in("CEN_OH", A), out("NDC_OH", A)} > 0,
   #count {B : vrs(B), in("CEN_OH", B), in("NDC_OH", B)} = 0,
   #count {C : vrs(C), out("CEN_OH", C), in("NDC_OH", C)} > 0.
:- #count {A : vrs(A), in("CEN_OH", A), out("NDC_OH", A)} > 0,
   #count {B : vrs(B), in("CEN_OH", B), in("NDC_OH", B)} > 0,
   #count {C : vrs(C), out("CEN_OH", C), in("NDC_OH", C)} > 0.
:- #count {A : vrs(A), in("CEN_OH", A), out("NDC_OH", A)} = 0,
   #count {B : vrs(B), in("CEN_OH", B), in("NDC_OH", B)} > 0,
   #count {C : vrs(C), out("CEN_OH", C), in("NDC_OH", C)} > 0.
:- #count {A : vrs(A), in("CEN_OH", A), out("NDC_OH", A)} > 0,
   #count {B : vrs(B), in("CEN_OH", B), in("NDC_OH", B)} > 0,
   #count {C : vrs(C), out("CEN_OH", C), in("NDC_OH", C)} = 0.
ir(X, r689) :- in("CEN_OH", X), out("NDC_OH", X).
:- #count {X : vrs(X), in("CEN_OH", X), in("NDC_OH", X)} = 0.
ir(X, r689) :- out("CEN_OH", X), in("NDC_OH", X).

% "CEN_OK" ['='] "NDC_OK"
:- #count {A : vrs(A), in("CEN_OK", A), out("NDC_OK", A)} > 0,
   #count {B : vrs(B), in("CEN_OK", B), in("NDC_OK", B)} = 0,
   #count {C : vrs(C), out("CEN_OK", C), in("NDC_OK", C)} > 0.
:- #count {A : vrs(A), in("CEN_OK", A), out("NDC_OK", A)} > 0,
   #count {B : vrs(B), in("CEN_OK", B), in("NDC_OK", B)} > 0,
   #count {C : vrs(C), out("CEN_OK", C), in("NDC_OK", C)} > 0.
:- #count {A : vrs(A), in("CEN_OK", A), out("NDC_OK", A)} = 0,
   #count {B : vrs(B), in("CEN_OK", B), in("NDC_OK", B)} > 0,
   #count {C : vrs(C), out("CEN_OK", C), in("NDC_OK", C)} > 0.
:- #count {A : vrs(A), in("CEN_OK", A), out("NDC_OK", A)} > 0,
   #count {B : vrs(B), in("CEN_OK", B), in("NDC_OK", B)} > 0,
   #count {C : vrs(C), out("CEN_OK", C), in("NDC_OK", C)} = 0.
ir(X, r690) :- in("CEN_OK", X), out("NDC_OK", X).
:- #count {X : vrs(X), in("CEN_OK", X), in("NDC_OK", X)} = 0.
ir(X, r690) :- out("CEN_OK", X), in("NDC_OK", X).

% "CEN_OR" ['='] "NDC_OR"
:- #count {A : vrs(A), in("CEN_OR", A), out("NDC_OR", A)} > 0,
   #count {B : vrs(B), in("CEN_OR", B), in("NDC_OR", B)} = 0,
   #count {C : vrs(C), out("CEN_OR", C), in("NDC_OR", C)} > 0.
:- #count {A : vrs(A), in("CEN_OR", A), out("NDC_OR", A)} > 0,
   #count {B : vrs(B), in("CEN_OR", B), in("NDC_OR", B)} > 0,
   #count {C : vrs(C), out("CEN_OR", C), in("NDC_OR", C)} > 0.
:- #count {A : vrs(A), in("CEN_OR", A), out("NDC_OR", A)} = 0,
   #count {B : vrs(B), in("CEN_OR", B), in("NDC_OR", B)} > 0,
   #count {C : vrs(C), out("CEN_OR", C), in("NDC_OR", C)} > 0.
:- #count {A : vrs(A), in("CEN_OR", A), out("NDC_OR", A)} > 0,
   #count {B : vrs(B), in("CEN_OR", B), in("NDC_OR", B)} > 0,
   #count {C : vrs(C), out("CEN_OR", C), in("NDC_OR", C)} = 0.
ir(X, r691) :- in("CEN_OR", X), out("NDC_OR", X).
:- #count {X : vrs(X), in("CEN_OR", X), in("NDC_OR", X)} = 0.
ir(X, r691) :- out("CEN_OR", X), in("NDC_OR", X).

% "CEN_PA" ['='] "NDC_PA"
:- #count {A : vrs(A), in("CEN_PA", A), out("NDC_PA", A)} > 0,
   #count {B : vrs(B), in("CEN_PA", B), in("NDC_PA", B)} = 0,
   #count {C : vrs(C), out("CEN_PA", C), in("NDC_PA", C)} > 0.
:- #count {A : vrs(A), in("CEN_PA", A), out("NDC_PA", A)} > 0,
   #count {B : vrs(B), in("CEN_PA", B), in("NDC_PA", B)} > 0,
   #count {C : vrs(C), out("CEN_PA", C), in("NDC_PA", C)} > 0.
:- #count {A : vrs(A), in("CEN_PA", A), out("NDC_PA", A)} = 0,
   #count {B : vrs(B), in("CEN_PA", B), in("NDC_PA", B)} > 0,
   #count {C : vrs(C), out("CEN_PA", C), in("NDC_PA", C)} > 0.
:- #count {A : vrs(A), in("CEN_PA", A), out("NDC_PA", A)} > 0,
   #count {B : vrs(B), in("CEN_PA", B), in("NDC_PA", B)} > 0,
   #count {C : vrs(C), out("CEN_PA", C), in("NDC_PA", C)} = 0.
ir(X, r692) :- in("CEN_PA", X), out("NDC_PA", X).
:- #count {X : vrs(X), in("CEN_PA", X), in("NDC_PA", X)} = 0.
ir(X, r692) :- out("CEN_PA", X), in("NDC_PA", X).

% "CEN_RI" ['='] "NDC_RI"
:- #count {A : vrs(A), in("CEN_RI", A), out("NDC_RI", A)} > 0,
   #count {B : vrs(B), in("CEN_RI", B), in("NDC_RI", B)} = 0,
   #count {C : vrs(C), out("CEN_RI", C), in("NDC_RI", C)} > 0.
:- #count {A : vrs(A), in("CEN_RI", A), out("NDC_RI", A)} > 0,
   #count {B : vrs(B), in("CEN_RI", B), in("NDC_RI", B)} > 0,
   #count {C : vrs(C), out("CEN_RI", C), in("NDC_RI", C)} > 0.
:- #count {A : vrs(A), in("CEN_RI", A), out("NDC_RI", A)} = 0,
   #count {B : vrs(B), in("CEN_RI", B), in("NDC_RI", B)} > 0,
   #count {C : vrs(C), out("CEN_RI", C), in("NDC_RI", C)} > 0.
:- #count {A : vrs(A), in("CEN_RI", A), out("NDC_RI", A)} > 0,
   #count {B : vrs(B), in("CEN_RI", B), in("NDC_RI", B)} > 0,
   #count {C : vrs(C), out("CEN_RI", C), in("NDC_RI", C)} = 0.
ir(X, r693) :- in("CEN_RI", X), out("NDC_RI", X).
:- #count {X : vrs(X), in("CEN_RI", X), in("NDC_RI", X)} = 0.
ir(X, r693) :- out("CEN_RI", X), in("NDC_RI", X).

% "CEN_SC" ['='] "NDC_SC"
:- #count {A : vrs(A), in("CEN_SC", A), out("NDC_SC", A)} > 0,
   #count {B : vrs(B), in("CEN_SC", B), in("NDC_SC", B)} = 0,
   #count {C : vrs(C), out("CEN_SC", C), in("NDC_SC", C)} > 0.
:- #count {A : vrs(A), in("CEN_SC", A), out("NDC_SC", A)} > 0,
   #count {B : vrs(B), in("CEN_SC", B), in("NDC_SC", B)} > 0,
   #count {C : vrs(C), out("CEN_SC", C), in("NDC_SC", C)} > 0.
:- #count {A : vrs(A), in("CEN_SC", A), out("NDC_SC", A)} = 0,
   #count {B : vrs(B), in("CEN_SC", B), in("NDC_SC", B)} > 0,
   #count {C : vrs(C), out("CEN_SC", C), in("NDC_SC", C)} > 0.
:- #count {A : vrs(A), in("CEN_SC", A), out("NDC_SC", A)} > 0,
   #count {B : vrs(B), in("CEN_SC", B), in("NDC_SC", B)} > 0,
   #count {C : vrs(C), out("CEN_SC", C), in("NDC_SC", C)} = 0.
ir(X, r694) :- in("CEN_SC", X), out("NDC_SC", X).
:- #count {X : vrs(X), in("CEN_SC", X), in("NDC_SC", X)} = 0.
ir(X, r694) :- out("CEN_SC", X), in("NDC_SC", X).

% "CEN_SD" ['='] "NDC_SD"
:- #count {A : vrs(A), in("CEN_SD", A), out("NDC_SD", A)} > 0,
   #count {B : vrs(B), in("CEN_SD", B), in("NDC_SD", B)} = 0,
   #count {C : vrs(C), out("CEN_SD", C), in("NDC_SD", C)} > 0.
:- #count {A : vrs(A), in("CEN_SD", A), out("NDC_SD", A)} > 0,
   #count {B : vrs(B), in("CEN_SD", B), in("NDC_SD", B)} > 0,
   #count {C : vrs(C), out("CEN_SD", C), in("NDC_SD", C)} > 0.
:- #count {A : vrs(A), in("CEN_SD", A), out("NDC_SD", A)} = 0,
   #count {B : vrs(B), in("CEN_SD", B), in("NDC_SD", B)} > 0,
   #count {C : vrs(C), out("CEN_SD", C), in("NDC_SD", C)} > 0.
:- #count {A : vrs(A), in("CEN_SD", A), out("NDC_SD", A)} > 0,
   #count {B : vrs(B), in("CEN_SD", B), in("NDC_SD", B)} > 0,
   #count {C : vrs(C), out("CEN_SD", C), in("NDC_SD", C)} = 0.
ir(X, r695) :- in("CEN_SD", X), out("NDC_SD", X).
:- #count {X : vrs(X), in("CEN_SD", X), in("NDC_SD", X)} = 0.
ir(X, r695) :- out("CEN_SD", X), in("NDC_SD", X).

% "CEN_TN" ['='] "NDC_TN"
:- #count {A : vrs(A), in("CEN_TN", A), out("NDC_TN", A)} > 0,
   #count {B : vrs(B), in("CEN_TN", B), in("NDC_TN", B)} = 0,
   #count {C : vrs(C), out("CEN_TN", C), in("NDC_TN", C)} > 0.
:- #count {A : vrs(A), in("CEN_TN", A), out("NDC_TN", A)} > 0,
   #count {B : vrs(B), in("CEN_TN", B), in("NDC_TN", B)} > 0,
   #count {C : vrs(C), out("CEN_TN", C), in("NDC_TN", C)} > 0.
:- #count {A : vrs(A), in("CEN_TN", A), out("NDC_TN", A)} = 0,
   #count {B : vrs(B), in("CEN_TN", B), in("NDC_TN", B)} > 0,
   #count {C : vrs(C), out("CEN_TN", C), in("NDC_TN", C)} > 0.
:- #count {A : vrs(A), in("CEN_TN", A), out("NDC_TN", A)} > 0,
   #count {B : vrs(B), in("CEN_TN", B), in("NDC_TN", B)} > 0,
   #count {C : vrs(C), out("CEN_TN", C), in("NDC_TN", C)} = 0.
ir(X, r696) :- in("CEN_TN", X), out("NDC_TN", X).
:- #count {X : vrs(X), in("CEN_TN", X), in("NDC_TN", X)} = 0.
ir(X, r696) :- out("CEN_TN", X), in("NDC_TN", X).

% "CEN_TX" ['='] "NDC_TX"
:- #count {A : vrs(A), in("CEN_TX", A), out("NDC_TX", A)} > 0,
   #count {B : vrs(B), in("CEN_TX", B), in("NDC_TX", B)} = 0,
   #count {C : vrs(C), out("CEN_TX", C), in("NDC_TX", C)} > 0.
:- #count {A : vrs(A), in("CEN_TX", A), out("NDC_TX", A)} > 0,
   #count {B : vrs(B), in("CEN_TX", B), in("NDC_TX", B)} > 0,
   #count {C : vrs(C), out("CEN_TX", C), in("NDC_TX", C)} > 0.
:- #count {A : vrs(A), in("CEN_TX", A), out("NDC_TX", A)} = 0,
   #count {B : vrs(B), in("CEN_TX", B), in("NDC_TX", B)} > 0,
   #count {C : vrs(C), out("CEN_TX", C), in("NDC_TX", C)} > 0.
:- #count {A : vrs(A), in("CEN_TX", A), out("NDC_TX", A)} > 0,
   #count {B : vrs(B), in("CEN_TX", B), in("NDC_TX", B)} > 0,
   #count {C : vrs(C), out("CEN_TX", C), in("NDC_TX", C)} = 0.
ir(X, r697) :- in("CEN_TX", X), out("NDC_TX", X).
:- #count {X : vrs(X), in("CEN_TX", X), in("NDC_TX", X)} = 0.
ir(X, r697) :- out("CEN_TX", X), in("NDC_TX", X).

% "CEN_UT" ['='] "NDC_UT"
:- #count {A : vrs(A), in("CEN_UT", A), out("NDC_UT", A)} > 0,
   #count {B : vrs(B), in("CEN_UT", B), in("NDC_UT", B)} = 0,
   #count {C : vrs(C), out("CEN_UT", C), in("NDC_UT", C)} > 0.
:- #count {A : vrs(A), in("CEN_UT", A), out("NDC_UT", A)} > 0,
   #count {B : vrs(B), in("CEN_UT", B), in("NDC_UT", B)} > 0,
   #count {C : vrs(C), out("CEN_UT", C), in("NDC_UT", C)} > 0.
:- #count {A : vrs(A), in("CEN_UT", A), out("NDC_UT", A)} = 0,
   #count {B : vrs(B), in("CEN_UT", B), in("NDC_UT", B)} > 0,
   #count {C : vrs(C), out("CEN_UT", C), in("NDC_UT", C)} > 0.
:- #count {A : vrs(A), in("CEN_UT", A), out("NDC_UT", A)} > 0,
   #count {B : vrs(B), in("CEN_UT", B), in("NDC_UT", B)} > 0,
   #count {C : vrs(C), out("CEN_UT", C), in("NDC_UT", C)} = 0.
ir(X, r698) :- in("CEN_UT", X), out("NDC_UT", X).
:- #count {X : vrs(X), in("CEN_UT", X), in("NDC_UT", X)} = 0.
ir(X, r698) :- out("CEN_UT", X), in("NDC_UT", X).

% "CEN_VA" ['='] "NDC_VA"
:- #count {A : vrs(A), in("CEN_VA", A), out("NDC_VA", A)} > 0,
   #count {B : vrs(B), in("CEN_VA", B), in("NDC_VA", B)} = 0,
   #count {C : vrs(C), out("CEN_VA", C), in("NDC_VA", C)} > 0.
:- #count {A : vrs(A), in("CEN_VA", A), out("NDC_VA", A)} > 0,
   #count {B : vrs(B), in("CEN_VA", B), in("NDC_VA", B)} > 0,
   #count {C : vrs(C), out("CEN_VA", C), in("NDC_VA", C)} > 0.
:- #count {A : vrs(A), in("CEN_VA", A), out("NDC_VA", A)} = 0,
   #count {B : vrs(B), in("CEN_VA", B), in("NDC_VA", B)} > 0,
   #count {C : vrs(C), out("CEN_VA", C), in("NDC_VA", C)} > 0.
:- #count {A : vrs(A), in("CEN_VA", A), out("NDC_VA", A)} > 0,
   #count {B : vrs(B), in("CEN_VA", B), in("NDC_VA", B)} > 0,
   #count {C : vrs(C), out("CEN_VA", C), in("NDC_VA", C)} = 0.
ir(X, r699) :- in("CEN_VA", X), out("NDC_VA", X).
:- #count {X : vrs(X), in("CEN_VA", X), in("NDC_VA", X)} = 0.
ir(X, r699) :- out("CEN_VA", X), in("NDC_VA", X).

% "CEN_VT" ['='] "NDC_VT"
:- #count {A : vrs(A), in("CEN_VT", A), out("NDC_VT", A)} > 0,
   #count {B : vrs(B), in("CEN_VT", B), in("NDC_VT", B)} = 0,
   #count {C : vrs(C), out("CEN_VT", C), in("NDC_VT", C)} > 0.
:- #count {A : vrs(A), in("CEN_VT", A), out("NDC_VT", A)} > 0,
   #count {B : vrs(B), in("CEN_VT", B), in("NDC_VT", B)} > 0,
   #count {C : vrs(C), out("CEN_VT", C), in("NDC_VT", C)} > 0.
:- #count {A : vrs(A), in("CEN_VT", A), out("NDC_VT", A)} = 0,
   #count {B : vrs(B), in("CEN_VT", B), in("NDC_VT", B)} > 0,
   #count {C : vrs(C), out("CEN_VT", C), in("NDC_VT", C)} > 0.
:- #count {A : vrs(A), in("CEN_VT", A), out("NDC_VT", A)} > 0,
   #count {B : vrs(B), in("CEN_VT", B), in("NDC_VT", B)} > 0,
   #count {C : vrs(C), out("CEN_VT", C), in("NDC_VT", C)} = 0.
ir(X, r700) :- in("CEN_VT", X), out("NDC_VT", X).
:- #count {X : vrs(X), in("CEN_VT", X), in("NDC_VT", X)} = 0.
ir(X, r700) :- out("CEN_VT", X), in("NDC_VT", X).

% "CEN_WA" ['='] "NDC_WA"
:- #count {A : vrs(A), in("CEN_WA", A), out("NDC_WA", A)} > 0,
   #count {B : vrs(B), in("CEN_WA", B), in("NDC_WA", B)} = 0,
   #count {C : vrs(C), out("CEN_WA", C), in("NDC_WA", C)} > 0.
:- #count {A : vrs(A), in("CEN_WA", A), out("NDC_WA", A)} > 0,
   #count {B : vrs(B), in("CEN_WA", B), in("NDC_WA", B)} > 0,
   #count {C : vrs(C), out("CEN_WA", C), in("NDC_WA", C)} > 0.
:- #count {A : vrs(A), in("CEN_WA", A), out("NDC_WA", A)} = 0,
   #count {B : vrs(B), in("CEN_WA", B), in("NDC_WA", B)} > 0,
   #count {C : vrs(C), out("CEN_WA", C), in("NDC_WA", C)} > 0.
:- #count {A : vrs(A), in("CEN_WA", A), out("NDC_WA", A)} > 0,
   #count {B : vrs(B), in("CEN_WA", B), in("NDC_WA", B)} > 0,
   #count {C : vrs(C), out("CEN_WA", C), in("NDC_WA", C)} = 0.
ir(X, r701) :- in("CEN_WA", X), out("NDC_WA", X).
:- #count {X : vrs(X), in("CEN_WA", X), in("NDC_WA", X)} = 0.
ir(X, r701) :- out("CEN_WA", X), in("NDC_WA", X).

% "CEN_WI" ['='] "NDC_WI"
:- #count {A : vrs(A), in("CEN_WI", A), out("NDC_WI", A)} > 0,
   #count {B : vrs(B), in("CEN_WI", B), in("NDC_WI", B)} = 0,
   #count {C : vrs(C), out("CEN_WI", C), in("NDC_WI", C)} > 0.
:- #count {A : vrs(A), in("CEN_WI", A), out("NDC_WI", A)} > 0,
   #count {B : vrs(B), in("CEN_WI", B), in("NDC_WI", B)} > 0,
   #count {C : vrs(C), out("CEN_WI", C), in("NDC_WI", C)} > 0.
:- #count {A : vrs(A), in("CEN_WI", A), out("NDC_WI", A)} = 0,
   #count {B : vrs(B), in("CEN_WI", B), in("NDC_WI", B)} > 0,
   #count {C : vrs(C), out("CEN_WI", C), in("NDC_WI", C)} > 0.
:- #count {A : vrs(A), in("CEN_WI", A), out("NDC_WI", A)} > 0,
   #count {B : vrs(B), in("CEN_WI", B), in("NDC_WI", B)} > 0,
   #count {C : vrs(C), out("CEN_WI", C), in("NDC_WI", C)} = 0.
ir(X, r702) :- in("CEN_WI", X), out("NDC_WI", X).
:- #count {X : vrs(X), in("CEN_WI", X), in("NDC_WI", X)} = 0.
ir(X, r702) :- out("CEN_WI", X), in("NDC_WI", X).

% "CEN_WV" ['='] "NDC_WV"
:- #count {A : vrs(A), in("CEN_WV", A), out("NDC_WV", A)} > 0,
   #count {B : vrs(B), in("CEN_WV", B), in("NDC_WV", B)} = 0,
   #count {C : vrs(C), out("CEN_WV", C), in("NDC_WV", C)} > 0.
:- #count {A : vrs(A), in("CEN_WV", A), out("NDC_WV", A)} > 0,
   #count {B : vrs(B), in("CEN_WV", B), in("NDC_WV", B)} > 0,
   #count {C : vrs(C), out("CEN_WV", C), in("NDC_WV", C)} > 0.
:- #count {A : vrs(A), in("CEN_WV", A), out("NDC_WV", A)} = 0,
   #count {B : vrs(B), in("CEN_WV", B), in("NDC_WV", B)} > 0,
   #count {C : vrs(C), out("CEN_WV", C), in("NDC_WV", C)} > 0.
:- #count {A : vrs(A), in("CEN_WV", A), out("NDC_WV", A)} > 0,
   #count {B : vrs(B), in("CEN_WV", B), in("NDC_WV", B)} > 0,
   #count {C : vrs(C), out("CEN_WV", C), in("NDC_WV", C)} = 0.
ir(X, r703) :- in("CEN_WV", X), out("NDC_WV", X).
:- #count {X : vrs(X), in("CEN_WV", X), in("NDC_WV", X)} = 0.
ir(X, r703) :- out("CEN_WV", X), in("NDC_WV", X).

% "CEN_WY" ['='] "NDC_WY"
:- #count {A : vrs(A), in("CEN_WY", A), out("NDC_WY", A)} > 0,
   #count {B : vrs(B), in("CEN_WY", B), in("NDC_WY", B)} = 0,
   #count {C : vrs(C), out("CEN_WY", C), in("NDC_WY", C)} > 0.
:- #count {A : vrs(A), in("CEN_WY", A), out("NDC_WY", A)} > 0,
   #count {B : vrs(B), in("CEN_WY", B), in("NDC_WY", B)} > 0,
   #count {C : vrs(C), out("CEN_WY", C), in("NDC_WY", C)} > 0.
:- #count {A : vrs(A), in("CEN_WY", A), out("NDC_WY", A)} = 0,
   #count {B : vrs(B), in("CEN_WY", B), in("NDC_WY", B)} > 0,
   #count {C : vrs(C), out("CEN_WY", C), in("NDC_WY", C)} > 0.
:- #count {A : vrs(A), in("CEN_WY", A), out("NDC_WY", A)} > 0,
   #count {B : vrs(B), in("CEN_WY", B), in("NDC_WY", B)} > 0,
   #count {C : vrs(C), out("CEN_WY", C), in("NDC_WY", C)} = 0.
ir(X, r704) :- in("CEN_WY", X), out("NDC_WY", X).
:- #count {X : vrs(X), in("CEN_WY", X), in("NDC_WY", X)} = 0.
ir(X, r704) :- out("CEN_WY", X), in("NDC_WY", X).

% Decoding Rules
:- rel(X, Y, "="), rel(X, Y, "!"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "="), rel(X, Y, "o"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "="), rel(X, Y, "<"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "="), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "!"), rel(X, Y, "o"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "!"), rel(X, Y, "<"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "!"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "o"), rel(X, Y, "<"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "o"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).
:- rel(X, Y, "<"), rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2).

:- not rel(X, Y, "="), not rel(X, Y, "!"), not rel(X, Y, "o"), not rel(X, Y, "<"), not rel(X, Y, ">"), concept2(X, N1), concept2(Y, N2), N1 < N2.

rel(X, Y, "=") :- not hint(X, Y, 0), hint(X, Y, 1), not hint(X, Y, 2).
rel(X, Y, "!") :- hint(X, Y, 0), not hint(X, Y, 1), hint(X, Y, 2).
rel(X, Y, "o") :- hint(X, Y, 0), hint(X, Y, 1), hint(X, Y, 2).
rel(X, Y, "<") :- not hint(X, Y, 0), hint(X, Y, 1), hint(X, Y, 2).
rel(X, Y, ">") :- hint(X, Y, 0), hint(X, Y, 1), not hint(X, Y, 2).

hint(X, Y, 0) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), in(X, R), out(Y, R).
hint(X, Y, 1) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), in(X, R), in(Y, R).
hint(X, Y, 2) :- concept2(X, N1), concept2(Y, N2), N1 < N2, vrs(R), out(X, R), in(Y, R).


% Child Parent Rules for Viz

bl("CEN_USA", "CEN_Northeast").
bl("CEN_USA", "CEN_Midwest").
bl("CEN_USA", "CEN_South").
bl("CEN_USA", "CEN_West").
bl("CEN_Northeast", "CEN_CT").
bl("CEN_Northeast", "CEN_MA").
bl("CEN_Northeast", "CEN_ME").
bl("CEN_Northeast", "CEN_NH").
bl("CEN_Northeast", "CEN_NJ").
bl("CEN_Northeast", "CEN_NY").
bl("CEN_Northeast", "CEN_PA").
bl("CEN_Northeast", "CEN_RI").
bl("CEN_Northeast", "CEN_VT").
bl("CEN_Midwest", "CEN_IL").
bl("CEN_Midwest", "CEN_IN").
bl("CEN_Midwest", "CEN_IA").
bl("CEN_Midwest", "CEN_KS").
bl("CEN_Midwest", "CEN_MI").
bl("CEN_Midwest", "CEN_MN").
bl("CEN_Midwest", "CEN_MO").
bl("CEN_Midwest", "CEN_NE").
bl("CEN_Midwest", "CEN_ND").
bl("CEN_Midwest", "CEN_OH").
bl("CEN_Midwest", "CEN_SD").
bl("CEN_Midwest", "CEN_WI").
bl("CEN_South", "CEN_AL").
bl("CEN_South", "CEN_AR").
bl("CEN_South", "CEN_DE").
bl("CEN_South", "CEN_DC").
bl("CEN_South", "CEN_FL").
bl("CEN_South", "CEN_GA").
bl("CEN_South", "CEN_KY").
bl("CEN_South", "CEN_LA").
bl("CEN_South", "CEN_MD").
bl("CEN_South", "CEN_MS").
bl("CEN_South", "CEN_NC").
bl("CEN_South", "CEN_OK").
bl("CEN_South", "CEN_SC").
bl("CEN_South", "CEN_TN").
bl("CEN_South", "CEN_TX").
bl("CEN_South", "CEN_VA").
bl("CEN_South", "CEN_WV").
bl("CEN_West", "CEN_AZ").
bl("CEN_West", "CEN_CA").
bl("CEN_West", "CEN_CO").
bl("CEN_West", "CEN_ID").
bl("CEN_West", "CEN_MT").
bl("CEN_West", "CEN_NV").
bl("CEN_West", "CEN_NM").
bl("CEN_West", "CEN_OR").
bl("CEN_West", "CEN_UT").
bl("CEN_West", "CEN_WA").
bl("CEN_West", "CEN_WY").
bl("NDC_USA", "NDC_Midwest").
bl("NDC_USA", "NDC_Northeast").
bl("NDC_USA", "NDC_Southeast").
bl("NDC_USA", "NDC_Southwest").
bl("NDC_USA", "NDC_West").
bl("NDC_Midwest", "NDC_IA").
bl("NDC_Midwest", "NDC_IL").
bl("NDC_Midwest", "NDC_IN").
bl("NDC_Midwest", "NDC_KS").
bl("NDC_Midwest", "NDC_MI").
bl("NDC_Midwest", "NDC_MN").
bl("NDC_Midwest", "NDC_MO").
bl("NDC_Midwest", "NDC_ND").
bl("NDC_Midwest", "NDC_NE").
bl("NDC_Midwest", "NDC_OH").
bl("NDC_Midwest", "NDC_SD").
bl("NDC_Midwest", "NDC_WI").
bl("NDC_Northeast", "NDC_CT").
bl("NDC_Northeast", "NDC_DC").
bl("NDC_Northeast", "NDC_DE").
bl("NDC_Northeast", "NDC_MD").
bl("NDC_Northeast", "NDC_MA").
bl("NDC_Northeast", "NDC_ME").
bl("NDC_Northeast", "NDC_NH").
bl("NDC_Northeast", "NDC_NJ").
bl("NDC_Northeast", "NDC_NY").
bl("NDC_Northeast", "NDC_PA").
bl("NDC_Northeast", "NDC_RI").
bl("NDC_Northeast", "NDC_VT").
bl("NDC_Southeast", "NDC_AL").
bl("NDC_Southeast", "NDC_AR").
bl("NDC_Southeast", "NDC_FL").
bl("NDC_Southeast", "NDC_GA").
bl("NDC_Southeast", "NDC_KY").
bl("NDC_Southeast", "NDC_LA").
bl("NDC_Southeast", "NDC_MS").
bl("NDC_Southeast", "NDC_NC").
bl("NDC_Southeast", "NDC_SC").
bl("NDC_Southeast", "NDC_TN").
bl("NDC_Southeast", "NDC_VA").
bl("NDC_Southeast", "NDC_WV").
bl("NDC_Southwest", "NDC_AZ").
bl("NDC_Southwest", "NDC_NM").
bl("NDC_Southwest", "NDC_OK").
bl("NDC_Southwest", "NDC_TX").
bl("NDC_West", "NDC_CA").
bl("NDC_West", "NDC_CO").
bl("NDC_West", "NDC_ID").
bl("NDC_West", "NDC_MT").
bl("NDC_West", "NDC_NV").
bl("NDC_West", "NDC_OR").
bl("NDC_West", "NDC_WA").
bl("NDC_West", "NDC_WY").
bl("NDC_West", "NDC_UT").

#show rel/3.
eq(A, B) :- rel(A, B, "=").
po(A, B) :- rel(A, B, "o").
dr(A, B) :- rel(A, B, "!").
pp(A, B) :- rel(A, B, "<").
pp(B, A) :- rel(A, B, ">").
pp(Y,X) :- bl(X,Y).
u(X) :- bl(_,X).
u(X) :- bl(X,_).
#show eq/2.
#show po/2.
#show pp/2.
#show dr/2.
#show bl/2.
#show u/1.